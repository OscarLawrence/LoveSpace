{
  "project": "om",
  "success": false,
  "total_checks": 5,
  "passed": 0,
  "failed": 5,
  "failures": [
    {
      "check": "Test Execution",
      "error": "Tests failed: ERROR: usage: pytest [options] [file_or_dir] [file_or_dir] [...]\npytest: error: unrecognized arguments: --cov=src --cov-report=json --cov-report=term\n  inifile: /home/vincent/Documents/Momo/WorkSpace/projects/tools/om/pyproject.toml\n  rootdir: /home/vincent/Documents/Momo/WorkSpace/projects/tools/om\n\n"
    },
    {
      "check": "Ruff Linting",
      "error": "Linting issues: F401 [*] `typing.Set` imported but unused\n --> src/om/agent_scoping.py:7:32\n  |\n5 | \"\"\"\n6 |\n7 | from typing import List, Dict, Set, Optional, Tuple\n  |                                ^^^\n8 | from dataclasses import dataclass\n9 | from pathlib import Path\n  |\nhelp: Remove unused import: `typing.Set`\n\nF401 [*] `json` imported but unused\n  --> src/om/analysis.py:8:8\n   |\n 7 | import ast\n 8 | import json\n   |        ^^^^\n 9 | from pathlib import Path\n10 | from typing import Dict, List, Set, Tuple, Optional\n   |\nhelp: Remove unused import: `json`\n\nF401 [*] `typing.Set` imported but unused\n  --> src/om/analysis.py:10:32\n   |\n 8 | import json\n 9 | from pathlib import Path\n10 | from typing import Dict, List, Set, Tuple, Optional\n   |                                ^^^\n11 | from collections import defaultdict, Counter\n12 | from dataclasses import dataclass\n   |\nhelp: Remove unused import\n\nF401 [*] `typing.Tuple` imported but unused\n  --> src/om/analysis.py:10:37\n   |\n 8 | import json\n 9 | from pathlib import Path\n10 | from typing import Dict, List, Set, Tuple, Optional\n   |                                     ^^^^^\n11 | from collections import defaultdict, Counter\n12 | from dataclasses import dataclass\n   |\nhelp: Remove unused import\n\nF401 [*] `collections.defaultdict` imported but unused\n  --> src/om/analysis.py:11:25\n   |\n 9 | from pathlib import Path\n10 | from typing import Dict, List, Set, Tuple, Optional\n11 | from collections import defaultdict, Counter\n   |                         ^^^^^^^^^^^\n12 | from dataclasses import dataclass\n13 | import networkx as nx\n   |\nhelp: Remove unused import\n\nF401 [*] `collections.Counter` imported but unused\n  --> src/om/analysis.py:11:38\n   |\n 9 | from pathlib import Path\n10 | from typing import Dict, List, Set, Tuple, Optional\n11 | from collections import defaultdict, Counter\n   |                                      ^^^^^^^\n12 | from dataclasses import dataclass\n13 | import networkx as nx\n   |\nhelp: Remove unused import\n\nE722 Do not use bare `except`\n  --> src/om/analysis.py:91:9\n   |\n89 |                     if len(longest) > 3:\n90 |                         critical_paths.append(longest)\n91 |         except:\n   |         ^^^^^^\n92 |             pass\n   |\n\nE722 Do not use bare `except`\n  --> src/om/analysis.py:97:9\n   |\n95 |         try:\n96 |             cycles = list(nx.simple_cycles(dep_graph))\n97 |         except:\n   |         ^^^^^^\n98 |             cycles = []\n   |\n\nE722 Do not use bare `except`\n   --> src/om/analysis.py:276:9\n    |\n275 |             return clusters\n276 |         except:\n    |         ^^^^^^\n277 |             return []\n    |\n\nE722 Do not use bare `except`\n   --> src/om/analysis.py:297:9\n    |\n296 |             return critical_paths[:5]  # Return top 5\n297 |         except:\n    |         ^^^^^^\n298 |             return []\n    |\n\nF401 [*] `sys` imported but unused\n --> src/om/cli/code.py:5:8\n  |\n3 | import click\n4 | import subprocess\n5 | import sys\n  |        ^^^\n6 | from pathlib import Path\n7 | from .utils import _check_code_parser\n  |\nhelp: Remove unused import: `sys`\n\nE722 Do not use bare `except`\n  --> src/om/cli/docs.py:33:9\n   |\n31 |                 for match in matches[:3]:\n32 |                     results.append(f\"{py_file.stem}:{match}\")\n33 |         except:\n   |         ^^^^^^\n34 |             continue\n   |\n\nE722 Do not use bare `except`\n   --> src/om/cli/docs.py:155:17\n    |\n153 |                         click.echo(parsed[:500] + \"...\" if len(parsed) > 500 else parsed)\n154 |                         click.echo()\n155 |                 except:\n    |                 ^^^^^^\n156 |                     continue\n157 |         else:\n    |\n\nF841 Local variable `result` is assigned to but never used\n  --> src/om/cli/isolate.py:71:9\n   |\n69 |         isolation = ModuleIsolation()\n70 |         \n71 |         result = isolation.set_module_boundaries(\n   |         ^^^^^^\n72 |             module_name, \n73 |             list(dependencies), \n   |\nhelp: Remove assignment to unused variable `result`\n\nF401 [*] `.docs.python` imported but unused\n --> src/om/cli/main.py:6:25\n  |\n4 | import click\n5 | from .workspace import workspace\n6 | from .docs import docs, python\n  |                         ^^^^^^\n7 | from .code import code\n8 | from .find import find\n  |\nhelp: Remove unused import: `.docs.python`\n\nF841 Local variable `result` is assigned to but never used\n  --> src/om/cli/preferences.py:28:9\n   |\n26 |         manager = PreferenceManager()\n27 |         \n28 |         result = manager.set_preference(category, key, value, weight)\n   |         ^^^^^^\n29 |         manager.close()\n   |\nhelp: Remove assignment to unused variable `result`\n\nF841 Local variable `result` is assigned to but never used\n  --> src/om/cli/preferences.py:84:9\n   |\n82 |         manager = PreferenceManager()\n83 |         \n84 |         result = manager.record_feedback(rating, comment, task, module)\n   |         ^^^^^^\n85 |         manager.close()\n   |\nhelp: Remove assignment to unused variable `result`\n\nF401 `docs_parser.search` imported but unused; consider using `importlib.util.find_spec` to test for availability\n  --> src/om/cli/utils.py:15:20\n   |\n13 |             import docs_parser.python_stdlib\n14 |             import docs_parser.universal_parser\n15 |             import docs_parser.search\n   |                    ^^^^^^^^^^^^^^^^^^\n16 |             DOCS_PARSER_AVAILABLE = True\n17 |         except ImportError:\n   |\nhelp: Remove unused import: `docs_parser.search`\n\nF401 `code_parser.interpreter` imported but unused; consider using `importlib.util.find_spec` to test for availability\n  --> src/om/cli/utils.py:27:20\n   |\n25 |         try:\n26 |             import code_parser.python_parser\n27 |             import code_parser.interpreter\n   |                    ^^^^^^^^^^^^^^^^^^^^^^^\n28 |             import knowledge.db_manager\n29 |             CODE_PARSER_AVAILABLE = True\n   |\nhelp: Remove unused import: `code_parser.interpreter`\n\nF401 `knowledge.db_manager` imported but unused; consider using `importlib.util.find_spec` to test for availability\n  --> src/om/cli/utils.py:28:20\n   |\n26 |             import code_parser.python_parser\n27 |             import code_parser.interpreter\n28 |             import knowledge.db_manager\n   |                    ^^^^^^^^^^^^^^^^^^^^\n29 |             CODE_PARSER_AVAILABLE = True\n30 |         except ImportError:\n   |\nhelp: Remove unused import: `knowledge.db_manager`\n\nF401 `om.memory_integration.MemoryIntegration` imported but unused; consider using `importlib.util.find_spec` to test for availability\n  --> src/om/cli/utils.py:39:47\n   |\n37 |     if MEMORY_AVAILABLE is None:\n38 |         try:\n39 |             from om.memory_integration import MemoryIntegration\n   |                                               ^^^^^^^^^^^^^^^^^\n40 |             from om.module_isolation import ModuleIsolation\n41 |             from om.session_manager import SessionManager\n   |\nhelp: Remove unused import: `om.memory_integration.MemoryIntegration`\n\nF401 `om.module_isolation.ModuleIsolation` imported but unused; consider using `importlib.util.find_spec` to test for availability\n  --> src/om/cli/utils.py:40:45\n   |\n38 |         try:\n39 |             from om.memory_integration import MemoryIntegration\n40 |             from om.module_isolation import ModuleIsolation\n   |                                             ^^^^^^^^^^^^^^^\n41 |             from om.session_manager import SessionManager\n42 |             from om.preferences import PreferenceManager\n   |\nhelp: Remove unused import: `om.module_isolation.ModuleIsolation`\n\nF401 `om.session_manager.SessionManager` imported but unused; consider using `importlib.util.find_spec` to test for availability\n  --> src/om/cli/utils.py:41:44\n   |\n39 |             from om.memory_integration import MemoryIntegration\n40 |             from om.module_isolation import ModuleIsolation\n41 |             from om.session_manager import SessionManager\n   |                                            ^^^^^^^^^^^^^^\n42 |             from om.preferences import PreferenceManager\n43 |             MEMORY_AVAILABLE = True\n   |\nhelp: Remove unused import: `om.session_manager.SessionManager`\n\nF401 `om.preferences.PreferenceManager` imported but unused; consider using `importlib.util.find_spec` to test for availability\n  --> src/om/cli/utils.py:42:40\n   |\n40 |             from om.module_isolation import ModuleIsolation\n41 |             from om.session_manager import SessionManager\n42 |             from om.preferences import PreferenceManager\n   |                                        ^^^^^^^^^^^^^^^^^\n43 |             MEMORY_AVAILABLE = True\n44 |         except ImportError:\n   |\nhelp: Remove unused import: `om.preferences.PreferenceManager`\n\nF401 [*] `pathlib.Path` imported but unused\n --> src/om/cli_reference.py:7:21\n  |\n6 | import click\n7 | from pathlib import Path\n  |                     ^^^^\n8 | from typing import Dict, List, Optional, Any\n9 | import inspect\n  |\nhelp: Remove unused import: `pathlib.Path`\n\nF401 [*] `typing.Optional` imported but unused\n  --> src/om/cli_reference.py:8:32\n   |\n 6 | import click\n 7 | from pathlib import Path\n 8 | from typing import Dict, List, Optional, Any\n   |                                ^^^^^^^^\n 9 | import inspect\n10 | import re\n   |\nhelp: Remove unused import: `typing.Optional`\n\nF541 [*] f-string without any placeholders\n   --> src/om/cli_reference.py:229:22\n    |\n227 |         lines.append(\"### Usage\")\n228 |         lines.append(\"\")\n229 |         lines.append(f\"```bash\")\n    |                      ^^^^^^^^^^\n230 |         lines.append(command_info['usage'])\n231 |         lines.append(\"```\")\n    |\nhelp: Remove extraneous `f` prefix\n\nF541 [*] f-string without any placeholders\n   --> src/om/cli_reference.py:243:34\n    |\n241 |                 lines.append(f\"  - {arg['help']}\")\n242 |                 if not arg['required']:\n243 |                     lines.append(f\"  - Optional\")\n    |                                  ^^^^^^^^^^^^^^^\n244 |                 lines.append(\"\")\n    |\nhelp: Remove extraneous `f` prefix\n\nF541 [*] f-string without any placeholders\n   --> src/om/cli_reference.py:269:34\n    |\n268 |                 if option['required']:\n269 |                     lines.append(f\"  - Required\")\n    |                                  ^^^^^^^^^^^^^^^\n270 |                 \n271 |                 lines.append(\"\")\n    |\nhelp: Remove extraneous `f` prefix\n\nF541 [*] f-string without any placeholders\n   --> src/om/cli_reference.py:286:30\n    |\n285 |             for example in command_info['examples']:\n286 |                 lines.append(f\"```bash\")\n    |                              ^^^^^^^^^^\n287 |                 lines.append(example)\n288 |                 lines.append(\"```\")\n    |\nhelp: Remove extraneous `f` prefix\n\nF401 [*] `typing.Optional` imported but unused\n --> src/om/coordination_scaffolding.py:4:32\n  |\n2 | \"\"\"Coordination-based scaffolding system for intelligent subsystem generation.\"\"\"\n3 |\n4 | from typing import Dict, List, Optional, Tuple, Any\n  |                                ^^^^^^^^\n5 | from dataclasses import dataclass\n6 | from enum import Enum\n  |\nhelp: Remove unused import\n\nF401 [*] `typing.Tuple` imported but unused\n --> src/om/coordination_scaffolding.py:4:42\n  |\n2 | \"\"\"Coordination-based scaffolding system for intelligent subsystem generation.\"\"\"\n3 |\n4 | from typing import Dict, List, Optional, Tuple, Any\n  |                                          ^^^^^\n5 | from dataclasses import dataclass\n6 | from enum import Enum\n  |\nhelp: Remove unused import\n\nF401 [*] `typing.Any` imported but unused\n --> src/om/coordination_scaffolding.py:4:49\n  |\n2 | \"\"\"Coordination-based scaffolding system for intelligent subsystem generation.\"\"\"\n3 |\n4 | from typing import Dict, List, Optional, Tuple, Any\n  |                                                 ^^^\n5 | from dataclasses import dataclass\n6 | from enum import Enum\n  |\nhelp: Remove unused import\n\nF401 [*] `json` imported but unused\n --> src/om/coordination_scaffolding.py:7:8\n  |\n5 | from dataclasses import dataclass\n6 | from enum import Enum\n7 | import json\n  |        ^^^^\n  |\nhelp: Remove unused import: `json`\n\nF401 [*] `typing.Set` imported but unused\n  --> src/om/coverage_enforcement.py:9:32\n   |\n 7 | import json\n 8 | from pathlib import Path\n 9 | from typing import Dict, List, Set, Optional, Tuple, Any\n   |                                ^^^\n10 | from dataclasses import dataclass, asdict\n11 | from datetime import datetime\n   |\nhelp: Remove unused import\n\nF401 [*] `typing.Optional` imported but unused\n  --> src/om/coverage_enforcement.py:9:37\n   |\n 7 | import json\n 8 | from pathlib import Path\n 9 | from typing import Dict, List, Set, Optional, Tuple, Any\n   |                                     ^^^^^^^^\n10 | from dataclasses import dataclass, asdict\n11 | from datetime import datetime\n   |\nhelp: Remove unused import\n\nF401 [*] `inspect` imported but unused\n --> src/om/docless_architecture.py:7:8\n  |\n6 | import ast\n7 | import inspect\n  |        ^^^^^^^\n8 | from pathlib import Path\n9 | from typing import Dict, List, Optional, Tuple, Any\n  |\nhelp: Remove unused import: `inspect`\n\nF401 [*] `pathlib.Path` imported but unused\n  --> src/om/docless_architecture.py:8:21\n   |\n 6 | import ast\n 7 | import inspect\n 8 | from pathlib import Path\n   |                     ^^^^\n 9 | from typing import Dict, List, Optional, Tuple, Any\n10 | from dataclasses import dataclass\n   |\nhelp: Remove unused import: `pathlib.Path`\n\nF401 [*] `typing.Optional` imported but unused\n  --> src/om/docless_architecture.py:9:32\n   |\n 7 | import inspect\n 8 | from pathlib import Path\n 9 | from typing import Dict, List, Optional, Tuple, Any\n   |                                ^^^^^^^^\n10 | from dataclasses import dataclass\n11 | import re\n   |\nhelp: Remove unused import\n\nF401 [*] `typing.Tuple` imported but unused\n  --> src/om/docless_architecture.py:9:42\n   |\n 7 | import inspect\n 8 | from pathlib import Path\n 9 | from typing import Dict, List, Optional, Tuple, Any\n   |                                          ^^^^^\n10 | from dataclasses import dataclass\n11 | import re\n   |\nhelp: Remove unused import\n\nF401 [*] `typing.Any` imported but unused\n  --> src/om/docless_architecture.py:9:49\n   |\n 7 | import inspect\n 8 | from pathlib import Path\n 9 | from typing import Dict, List, Optional, Tuple, Any\n   |                                                 ^^^\n10 | from dataclasses import dataclass\n11 | import re\n   |\nhelp: Remove unused import\n\nE722 Do not use bare `except`\n   --> src/om/docless_architecture.py:313:9\n    |\n311 |         try:\n312 |             return ast.unparse(node)\n313 |         except:\n    |         ^^^^^^\n314 |             return str(node)\n    |\n\nF541 [*] f-string without any placeholders\n   --> src/om/docless_architecture.py:351:24\n    |\n349 |             rst += \"\\n**Examples:**\\n\\n\"\n350 |             for example in docs.examples:\n351 |                 rst += f\".. code-block:: python\\n\\n\"\n    |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n352 |                 for line in example.split('\\n'):\n353 |                     rst += f\"   {line}\\n\"\n    |\nhelp: Remove extraneous `f` prefix\n\nF541 [*] f-string without any placeholders\n   --> src/om/docless_architecture.py:380:24\n    |\n378 |             rst += \"**Usage Examples:**\\n\\n\"\n379 |             for example in docs.examples:\n380 |                 rst += f\".. code-block:: python\\n\\n\"\n    |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n381 |                 for line in example.split('\\n'):\n382 |                     rst += f\"   {line}\\n\"\n    |\nhelp: Remove extraneous `f` prefix\n\nF401 [*] `inspect` imported but unused\n --> src/om/docs/code_analyzer.py:4:8\n  |\n3 | import ast\n4 | import inspect\n  |        ^^^^^^^\n5 | from pathlib import Path\n6 | from typing import Dict, List, Optional, Set\n  |\nhelp: Remove unused import: `inspect`\n\nF401 [*] `os` imported but unused\n --> src/om/docs/documentation_builder.py:3:8\n  |\n1 | \"\"\"Documentation builder for coordinating the documentation generation process.\"\"\"\n2 |\n3 | import os\n  |        ^^\n4 | import sys\n5 | import subprocess\n  |\nhelp: Remove unused import: `os`\n\nF401 [*] `sys` imported but unused\n --> src/om/docs/documentation_builder.py:4:8\n  |\n3 | import os\n4 | import sys\n  |        ^^^\n5 | import subprocess\n6 | from pathlib import Path\n  |\nhelp: Remove unused import: `sys`\n\nF401 [*] `subprocess` imported but unused\n --> src/om/docs/documentation_builder.py:5:8\n  |\n3 | import os\n4 | import sys\n5 | import subprocess\n  |        ^^^^^^^^^^\n6 | from pathlib import Path\n7 | from typing import List, Dict, Optional\n  |\nhelp: Remove unused import: `subprocess`\n\nF401 [*] `typing.Optional` imported but unused\n --> src/om/docs/documentation_builder.py:7:32\n  |\n5 | import subprocess\n6 | from pathlib import Path\n7 | from typing import List, Dict, Optional\n  |                                ^^^^^^^^\n8 | from .code_analyzer import CodeAnalyzer, CodeElement\n9 | from .sphinx_generator import SphinxGenerator\n  |\nhelp: Remove unused import: `typing.Optional`\n\nF401 [*] `typing.Optional` imported but unused\n --> src/om/docs_commands.py:8:20\n  |\n6 | import click\n7 | from pathlib import Path\n8 | from typing import Optional, List\n  |                    ^^^^^^^^\n9 | import json\n  |\nhelp: Remove unused import\n\nF401 [*] `typing.List` imported but unused\n --> src/om/docs_commands.py:8:30\n  |\n6 | import click\n7 | from pathlib import Path\n8 | from typing import Optional, List\n  |                              ^^^^\n9 | import json\n  |\nhelp: Remove unused import\n\nF401 [*] `.sphinx_auto.SphinxGenerator` imported but unused\n  --> src/om/docs_commands.py:11:62\n   |\n 9 | import json\n10 |\n11 | from .sphinx_auto import DocumentationBuilder, CodeAnalyzer, SphinxGenerator\n   |                                                              ^^^^^^^^^^^^^^^\n12 | from .scoped_cli import scoped_command, validate_scope\n   |\nhelp: Remove unused import: `.sphinx_auto.SphinxGenerator`\n\nF401 [*] `ast` imported but unused\n --> src/om/integration_examples.py:6:8\n  |\n4 | \"\"\"\n5 |\n6 | import ast\n  |        ^^^\n7 | import json\n8 | from pathlib import Path\n  |\nhelp: Remove unused import: `ast`\n\nF401 [*] `json` imported but unused\n --> src/om/integration_examples.py:7:8\n  |\n6 | import ast\n7 | import json\n  |        ^^^^\n8 | from pathlib import Path\n9 | from typing import Dict, List, Optional, Any, Tuple\n  |\nhelp: Remove unused import: `json`\n\nF401 [*] `typing.Dict` imported but unused\n  --> src/om/integration_examples.py:9:20\n   |\n 7 | import json\n 8 | from pathlib import Path\n 9 | from typing import Dict, List, Optional, Any, Tuple\n   |                    ^^^^\n10 | from dataclasses import dataclass\n11 | import re\n   |\nhelp: Remove unused import\n\nF401 [*] `typing.Optional` imported but unused\n  --> src/om/integration_examples.py:9:32\n   |\n 7 | import json\n 8 | from pathlib import Path\n 9 | from typing import Dict, List, Optional, Any, Tuple\n   |                                ^^^^^^^^\n10 | from dataclasses import dataclass\n11 | import re\n   |\nhelp: Remove unused import\n\nF401 [*] `typing.Any` imported but unused\n  --> src/om/integration_examples.py:9:42\n   |\n 7 | import json\n 8 | from pathlib import Path\n 9 | from typing import Dict, List, Optional, Any, Tuple\n   |                                          ^^^\n10 | from dataclasses import dataclass\n11 | import re\n   |\nhelp: Remove unused import\n\nF401 [*] `typing.Tuple` imported but unused\n  --> src/om/integration_examples.py:9:47\n   |\n 7 | import json\n 8 | from pathlib import Path\n 9 | from typing import Dict, List, Optional, Any, Tuple\n   |                                               ^^^^^\n10 | from dataclasses import dataclass\n11 | import re\n   |\nhelp: Remove unused import\n\nF401 [*] `re` imported but unused\n  --> src/om/integration_examples.py:11:8\n   |\n 9 | from typing import Dict, List, Optional, Any, Tuple\n10 | from dataclasses import dataclass\n11 | import re\n   |        ^^\n12 | import textwrap\n   |\nhelp: Remove unused import: `re`\n\nF401 [*] `typing.Tuple` imported but unused\n  --> src/om/learning.py:9:42\n   |\n 7 | from dataclasses import dataclass\n 8 | from datetime import datetime, timedelta\n 9 | from typing import Dict, List, Optional, Tuple\n   |                                          ^^^^^\n10 |\n11 | from knowledge.db_manager import ContextDB\n   |\nhelp: Remove unused import: `typing.Tuple`\n\nF401 [*] `typing.Optional` imported but unused\n  --> src/om/memory_integration.py:8:32\n   |\n 6 | import json\n 7 | from datetime import datetime\n 8 | from typing import Dict, List, Optional\n   |                                ^^^^^^^^\n 9 |\n10 | from .module_isolation import ModuleIsolation, ModuleBoundary\n   |\nhelp: Remove unused import: `typing.Optional`\n\nF401 [*] `.module_isolation.ModuleBoundary` imported but unused\n  --> src/om/memory_integration.py:10:48\n   |\n 8 | from typing import Dict, List, Optional\n 9 |\n10 | from .module_isolation import ModuleIsolation, ModuleBoundary\n   |                                                ^^^^^^^^^^^^^^\n11 | from .session_manager import SessionManager\n12 | from .preferences import PreferenceManager\n   |\nhelp: Remove unused import: `.module_isolation.ModuleBoundary`\n\nF821 Undefined name `timedelta`\n   --> src/om/memory_integration.py:258:41\n    |\n256 |     def cleanup_old_data(self, days: int = 30):\n257 |         \"\"\"Clean up old session and workspace data.\"\"\"\n258 |         cutoff_date = (datetime.now() - timedelta(days=days)).isoformat()\n    |                                         ^^^^^^^^^\n259 |         \n260 |         # Clean old inactive workspaces\n    |\n\nF401 [*] `typing.Optional` imported but unused\n  --> src/om/module_isolation.py:10:32\n   |\n 8 | from dataclasses import dataclass\n 9 | from pathlib import Path\n10 | from typing import Dict, List, Optional, Set\n   |                                ^^^^^^^^\n11 | from datetime import datetime\n   |\nhelp: Remove unused import\n\nF401 [*] `typing.Set` imported but unused\n  --> src/om/module_isolation.py:10:42\n   |\n 8 | from dataclasses import dataclass\n 9 | from pathlib import Path\n10 | from typing import Dict, List, Optional, Set\n   |                                          ^^^\n11 | from datetime import datetime\n   |\nhelp: Remove unused import\n\nF401 [*] `typing.List` imported but unused\n  --> src/om/preferences.py:9:26\n   |\n 7 | from dataclasses import dataclass\n 8 | from datetime import datetime\n 9 | from typing import Dict, List, Optional, Any\n   |                          ^^^^\n10 |\n11 | from knowledge.db_manager import ContextDB\n   |\nhelp: Remove unused import\n\nF401 [*] `typing.Optional` imported but unused\n  --> src/om/preferences.py:9:32\n   |\n 7 | from dataclasses import dataclass\n 8 | from datetime import datetime\n 9 | from typing import Dict, List, Optional, Any\n   |                                ^^^^^^^^\n10 |\n11 | from knowledge.db_manager import ContextDB\n   |\nhelp: Remove unused import\n\nF401 [*] `uuid` imported but unused\n --> src/om/project_context.py:7:8\n  |\n6 | import json\n7 | import uuid\n  |        ^^^^\n8 | from dataclasses import dataclass\n9 | from datetime import datetime\n  |\nhelp: Remove unused import: `uuid`\n\nF401 [*] `typing.Optional` imported but unused\n  --> src/om/project_context.py:10:32\n   |\n 8 | from dataclasses import dataclass\n 9 | from datetime import datetime\n10 | from typing import Dict, List, Optional\n   |                                ^^^^^^^^\n11 |\n12 | from knowledge.db_manager import ContextDB\n   |\nhelp: Remove unused import: `typing.Optional`\n\nF401 [*] `pathlib.Path` imported but unused\n --> src/om/scaffold_commands.py:5:21\n  |\n4 | import click\n5 | from pathlib import Path\n  |                     ^^^^\n6 | from .coordination_scaffolding import create_coordination_scaffolder, ObjectiveType\n  |\nhelp: Remove unused import: `pathlib.Path`\n\nF541 [*] f-string without any placeholders\n  --> src/om/scaffold_commands.py:47:24\n   |\n45 |         # Show detailed breakdown if requested\n46 |         if plan_only:\n47 |             click.echo(f\"\\nSubsystems detected:\")\n   |                        ^^^^^^^^^^^^^^^^^^^^^^^^^\n48 |             for subsystem in subsystems:\n49 |                 click.echo(f\"  {subsystem.name}: {subsystem.estimated_lines} lines, complexity {subsystem.complexity_score:.2f}\")\n   |\nhelp: Remove extraneous `f` prefix\n\nF541 [*] f-string without any placeholders\n  --> src/om/scaffold_commands.py:53:24\n   |\n51 |             click.echo(f\"\\nBuild order: {' \u2192 '.join(plan.build_order)}\")\n52 |             \n53 |             click.echo(f\"\\nPattern selections:\")\n   |                        ^^^^^^^^^^^^^^^^^^^^^^^^\n54 |             for subsystem, pattern in plan.pattern_selections.items():\n55 |                 click.echo(f\"  {subsystem}: {pattern}\")\n   |\nhelp: Remove extraneous `f` prefix\n\nF541 [*] f-string without any placeholders\n  --> src/om/scaffold_commands.py:58:28\n   |\n57 |             if plan.integration_points:\n58 |                 click.echo(f\"\\nIntegration points:\")\n   |                            ^^^^^^^^^^^^^^^^^^^^^^^^\n59 |                 for integration in plan.integration_points:\n60 |                     click.echo(f\"  {integration.subsystem_a} \u2194 {integration.subsystem_b}: {integration.interface_type}\")\n   |\nhelp: Remove extraneous `f` prefix\n\nF841 Local variable `coordinator` is assigned to but never used\n  --> src/om/scaffold_commands.py:73:9\n   |\n71 |     \"\"\"Generate coordinated subsystem with intelligent integration.\"\"\"\n72 |     try:\n73 |         coordinator = create_coordination_scaffolder()\n   |         ^^^^^^^^^^^\n74 |         \n75 |         # For now, output what would be generated\n   |\nhelp: Remove assignment to unused variable `coordinator`\n\nF841 Local variable `coordinator` is assigned to but never used\n   --> src/om/scaffold_commands.py:133:9\n    |\n131 |     \"\"\"Validate and generate integration between two subsystems.\"\"\"\n132 |     try:\n133 |         coordinator = create_coordination_scaffolder()\n    |         ^^^^^^^^^^^\n134 |         \n135 |         # TODO: Implement integration validation and generation\n    |\nhelp: Remove assignment to unused variable `coordinator`\n\nF401 [*] `inspect` imported but unused\n  --> src/om/schema_generation.py:8:8\n   |\n 6 | import ast\n 7 | import json\n 8 | import inspect\n   |        ^^^^^^^\n 9 | from pathlib import Path\n10 | from typing import Dict, List, Optional, Any, Union, get_type_hints\n   |\nhelp: Remove unused import: `inspect`\n\nF401 [*] `typing.Optional` imported but unused\n  --> src/om/schema_generation.py:10:32\n   |\n 8 | import inspect\n 9 | from pathlib import Path\n10 | from typing import Dict, List, Optional, Any, Union, get_type_hints\n   |                                ^^^^^^^^\n11 | from dataclasses import dataclass, asdict\n12 | import re\n   |\nhelp: Remove unused import\n\nF401 [*] `typing.get_type_hints` imported but unused\n  --> src/om/schema_generation.py:10:54\n   |\n 8 | import inspect\n 9 | from pathlib import Path\n10 | from typing import Dict, List, Optional, Any, Union, get_type_hints\n   |                                                      ^^^^^^^^^^^^^^\n11 | from dataclasses import dataclass, asdict\n12 | import re\n   |\nhelp: Remove unused import\n\nF401 [*] `dataclasses.asdict` imported but unused\n  --> src/om/schema_generation.py:11:36\n   |\n 9 | from pathlib import Path\n10 | from typing import Dict, List, Optional, Any, Union, get_type_hints\n11 | from dataclasses import dataclass, asdict\n   |                                    ^^^^^^\n12 | import re\n   |\nhelp: Remove unused import: `dataclasses.asdict`\n\nE721 Use `is` and `is not` for type comparisons, or `isinstance()` for isinstance checks\n  --> src/om/schema_generation.py:46:34\n   |\n44 |     def analyze_type_annotation(self, annotation: Any) -> TypeSchema:\n45 |         \"\"\"Analyze a type annotation and generate schema.\"\"\"\n46 |         if annotation is None or annotation == type(None):\n   |                                  ^^^^^^^^^^^^^^^^^^^^^^^^\n47 |             return TypeSchema(\n48 |                 name='null',\n   |\n\nE722 Do not use bare `except`\n   --> src/om/schema_generation.py:335:17\n    |\n333 |                     type_schema = self.analyzer._analyze_string_annotation(annotation_str)\n334 |                     param_schema = type_schema.properties\n335 |                 except:\n    |                 ^^^^^^\n336 |                     param_schema = {'type': 'string', 'description': f'Parameter {arg.arg}'}\n    |\n\nE722 Do not use bare `except`\n   --> src/om/schema_generation.py:354:13\n    |\n352 |                 return_type_schema = self.analyzer._analyze_string_annotation(return_annotation)\n353 |                 return_schema = return_type_schema.properties\n354 |             except:\n    |             ^^^^^^\n355 |                 return_schema = {'type': 'object'}\n    |\n\nE722 Do not use bare `except`\n   --> src/om/schema_generation.py:393:17\n    |\n391 |                     type_schema = self.analyzer._analyze_string_annotation(annotation_str)\n392 |                     schema['properties'][attr_name] = type_schema.properties\n393 |                 except:\n    |                 ^^^^^^\n394 |                     schema['properties'][attr_name] = {'type': 'string'}\n    |\n\nF401 [*] `pathlib.Path` imported but unused\n --> src/om/scoped_cli.py:8:21\n  |\n6 | import click\n7 | from typing import List, Optional\n8 | from pathlib import Path\n  |                     ^^^^\n9 | import sys\n  |\nhelp: Remove unused import: `pathlib.Path`\n\nF401 [*] `sys` imported but unused\n  --> src/om/scoped_cli.py:9:8\n   |\n 7 | from typing import List, Optional\n 8 | from pathlib import Path\n 9 | import sys\n   |        ^^^\n10 |\n11 | from .agent_scoping import ScopeManager, ScopeContext, create_scope_context\n   |\nhelp: Remove unused import: `sys`\n\nF401 [*] `.agent_scoping.ScopeContext` imported but unused\n  --> src/om/scoped_cli.py:11:42\n   |\n 9 | import sys\n10 |\n11 | from .agent_scoping import ScopeManager, ScopeContext, create_scope_context\n   |                                          ^^^^^^^^^^^^\n   |\nhelp: Remove unused import: `.agent_scoping.ScopeContext`\n\nF401 [*] `pathlib.Path` imported but unused\n --> src/om/task_commands.py:5:21\n  |\n3 | import click\n4 | from datetime import datetime, timedelta\n5 | from pathlib import Path\n  |                     ^^^^\n6 | import json\n  |\nhelp: Remove unused import: `pathlib.Path`\n\nF841 Local variable `updated_task` is assigned to but never used\n   --> src/om/task_commands.py:286:9\n    |\n285 |     if updates:\n286 |         updated_task = manager.update_task(task_id, **updates)\n    |         ^^^^^^^^^^^^\n287 |         click.echo(f\"task:updated:{task_id}\")\n    |\nhelp: Remove assignment to unused variable `updated_task`\n\nF401 [*] `typing.Dict` imported but unused\n --> src/om/tasks/analyzer.py:4:20\n  |\n3 | import re\n4 | from typing import Dict, List, Tuple\n  |                    ^^^^\n5 | from .models import TaskType\n  |\nhelp: Remove unused import: `typing.Dict`\n\nF401 [*] `typing.Optional` imported but unused\n --> src/om/workflow_automation.py:6:32\n  |\n4 | \"\"\"\n5 |\n6 | from typing import Dict, List, Optional, Any, Callable\n  |                                ^^^^^^^^\n7 | from dataclasses import dataclass, field\n8 | from datetime import datetime, timedelta\n  |\nhelp: Remove unused import\n\nF401 [*] `typing.Callable` imported but unused\n --> src/om/workflow_automation.py:6:47\n  |\n4 | \"\"\"\n5 |\n6 | from typing import Dict, List, Optional, Any, Callable\n  |                                               ^^^^^^^^\n7 | from dataclasses import dataclass, field\n8 | from datetime import datetime, timedelta\n  |\nhelp: Remove unused import\n\nF401 [*] `datetime.timedelta` imported but unused\n  --> src/om/workflow_automation.py:8:32\n   |\n 6 | from typing import Dict, List, Optional, Any, Callable\n 7 | from dataclasses import dataclass, field\n 8 | from datetime import datetime, timedelta\n   |                                ^^^^^^^^^\n 9 | import json\n10 | from pathlib import Path\n   |\nhelp: Remove unused import: `datetime.timedelta`\n\nF401 [*] `pathlib.Path` imported but unused\n  --> src/om/workflow_automation.py:10:21\n   |\n 8 | from datetime import datetime, timedelta\n 9 | import json\n10 | from pathlib import Path\n   |                     ^^^^\n11 |\n12 | from .task_management import TaskManager, Task, TaskType, TaskPriority, TaskStatus\n   |\nhelp: Remove unused import: `pathlib.Path`\n\nFound 93 errors.\n[*] 68 fixable with the `--fix` option (6 hidden fixes can be enabled with the `--unsafe-fixes` option).\n"
    },
    {
      "check": "MyPy Type Check",
      "error": "Type errors: src/om/integration_examples.py:33: error: Function is missing a return type annotation  [no-untyped-def]\nsrc/om/integration_examples.py:33: note: Use \"-> None\" if function does not return a value\nsrc/om/integration_examples.py:532: error: Function is missing a return type annotation  [no-untyped-def]\nsrc/om/coverage_enforcement.py:41: error: Function is missing a return type annotation  [no-untyped-def]\nsrc/om/coverage_enforcement.py:41: note: Use \"-> None\" if function does not return a value\nsrc/om/coverage_enforcement.py:61: error: Incompatible default for argument \"patterns\" (default has type \"None\", argument has type \"list[str]\")  [assignment]\nsrc/om/coverage_enforcement.py:61: note: PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True\nsrc/om/coverage_enforcement.py:61: note: Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase\nsrc/om/coverage_enforcement.py:72: error: Need type annotation for \"python_files\" (hint: \"python_files: list[<type>] = ...\")  [var-annotated]\nsrc/om/coverage_enforcement.py:105: error: List comprehension has incompatible type List[dict[str, Any]]; expected List[str]  [misc]\nsrc/om/coverage_enforcement.py:339: error: Need type annotation for \"issues\" (hint: \"issues: list[<type>] = ...\")  [var-annotated]\nsrc/om/coverage_enforcement.py:436: error: Incompatible default for argument \"config\" (default has type \"None\", argument has type \"dict[str, Any]\")  [assignment]\nsrc/om/coverage_enforcement.py:436: note: PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True\nsrc/om/coverage_enforcement.py:436: note: Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase\nsrc/om/coverage_enforcement.py:462: error: Generator has incompatible item type \"int\"; expected \"bool\"  [misc]\nsrc/om/coverage_enforcement.py:462: error: Invalid index type \"str\" for \"str\"; expected type \"SupportsIndex | slice[Any, Any, Any]\"  [index]\nsrc/om/coverage_enforcement.py:463: error: Generator has incompatible item type \"int\"; expected \"bool\"  [misc]\nsrc/om/coverage_enforcement.py:463: error: Invalid index type \"str\" for \"str\"; expected type \"SupportsIndex | slice[Any, Any, Any]\"  [index]\nsrc/om/coverage_enforcement.py:477: error: Invalid index type \"str\" for \"str\"; expected type \"SupportsIndex | slice[Any, Any, Any]\"  [index]\nsrc/om/coverage_enforcement.py:478: error: Invalid index type \"str\" for \"str\"; expected type \"SupportsIndex | slice[Any, Any, Any]\"  [index]\nsrc/om/coverage_enforcement.py:515: error: Need type annotation for \"by_severity\" (hint: \"by_severity: dict[<type>, <type>] = ...\")  [var-annotated]\nsrc/om/coverage_enforcement.py:517: error: Invalid index type \"str\" for \"str\"; expected type \"SupportsIndex | slice[Any, Any, Any]\"  [index]\nsrc/om/coverage_enforcement.py:578: error: Need type annotation for \"by_severity\" (hint: \"by_severity: dict[<type>, <type>] = ...\")  [var-annotated]\nsrc/om/coverage_enforcement.py:580: error: Invalid index type \"str\" for \"str\"; expected type \"SupportsIndex | slice[Any, Any, Any]\"  [index]\nsrc/om/coordination_scaffolding.py:55: error: Function is missing a return type annotation  [no-untyped-def]\nsrc/om/coordination_scaffolding.py:55: note: Use \"-> None\" if function does not return a value\nsrc/om/coordination_scaffolding.py:237: error: Incompatible types in assignment (expression has type \"float\", variable has type \"int\")  [assignment]\nsrc/om/coordination_scaffolding.py:336: error: Call to untyped function \"SubsystemCoordinator\" in typed context  [no-untyped-call]\nsrc/om/agent_scoping.py:22: error: Incompatible types in assignment (expression has type \"None\", variable has type \"list[str]\")  [assignment]\nsrc/om/agent_scoping.py:24: error: Function is missing a return type annotation  [no-untyped-def]\nsrc/om/agent_scoping.py:24: note: Use \"-> None\" if function does not return a value\nsrc/om/agent_scoping.py:41: error: Function is missing a return type annotation  [no-untyped-def]\nsrc/om/agent_scoping.py:41: note: Use \"-> None\" if function does not return a value\nsrc/om/agent_scoping.py:167: error: Need type annotation for \"scope_counts\" (hint: \"scope_counts: dict[<type>, <type>] = ...\")  [var-annotated]\nsrc/om/agent_scoping.py:180: error: Call to untyped function \"ScopedToolProvider\" in typed context  [no-untyped-call]\nsrc/om/agent_scoping.py:187: error: Function is missing a return type annotation  [no-untyped-def]\nsrc/om/agent_scoping.py:187: note: Use \"-> None\" if function does not return a value\nsrc/om/agent_scoping.py:244: error: Call to untyped function \"AutoScoper\" in typed context  [no-untyped-call]\nsrc/om/agent_scoping.py:245: error: Call to untyped function \"ScopedToolProvider\" in typed context  [no-untyped-call]\nsrc/om/agent_scoping.py:247: error: Call to untyped function \"_load_session\" in typed context  [no-untyped-call]\nsrc/om/agent_scoping.py:273: error: Call to untyped function \"_save_session\" in typed context  [no-untyped-call]\nsrc/om/agent_scoping.py:289: error: Missing type parameters for generic type \"Dict\"  [type-arg]\nsrc/om/agent_scoping.py:294: error: Need type annotation for \"scope_counts\" (hint: \"scope_counts: dict[<type>, <type>] = ...\")  [var-annotated]\nsrc/om/agent_scoping.py:311: error: Function is missing a return type annotation  [no-untyped-def]\nsrc/om/agent_scoping.py:311: note: Use \"-> None\" if function does not return a value\nsrc/om/agent_scoping.py:322: error: Function is missing a return type annotation  [no-untyped-def]\nsrc/om/agent_scoping.py:322: note: Use \"-> None\" if function does not return a value\nsrc/om/agent_scoping.py:336: error: Incompatible default for argument \"args\" (default has type \"None\", argument has type \"list[str]\")  [assignment]\nsrc/om/agent_scoping.py:336: note: PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True\nsrc/om/agent_scoping.py:336: note: Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase\nsrc/om/agent_scoping.py:337: error: Incompatible default for argument \"module\" (default has type \"None\", argument has type \"str\")  [assignment]\nsrc/om/agent_scoping.py:337: note: PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True\nsrc/om/agent_scoping.py:337: note: Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase\nsrc/om/agent_scoping.py:337: error: Incompatible default for argument \"history\" (default has type \"None\", argument has type \"list[str]\")  [assignment]\nsrc/om/tasks/models.py:80: error: Function is missing a return type annotation  [no-untyped-def]\nsrc/om/tasks/models.py:80: note: Use \"-> None\" if function does not return a value\nsrc/om/tasks/models.py:84: error: Function is missing a return type annotation  [no-untyped-def]\nsrc/om/tasks/models.py:89: error: Function is missing a return type annotation  [no-untyped-def]\nsrc/om/tasks/models.py:97: error: Function is missing a return type annotation  [no-untyped-def]\nsrc/om/session_manager.py:20: error: Missing type parameters for generic type \"Dict\"  [type-arg]\nsrc/om/session_manager.py:31: error: Call to untyped function \"_ensure_memory_tables\" in typed context  [no-untyped-call]\nsrc/om/session_manager.py:33: error: Function is missing a return type annotation  [no-untyped-def]\nsrc/om/session_manager.py:33: note: Use \"-> None\" if function does not return a value\nsrc/om/session_manager.py:41: error: Missing type parameters for generic type \"Dict\"  [type-arg]\nsrc/om/session_manager.py:41: error: Incompatible default for argument \"module_name\" (default has type \"None\", argument has type \"str\")  [assignment]\nsrc/om/session_manager.py:41: note: PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True\nsrc/om/session_manager.py:41: note: Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase\nsrc/om/session_manager.py:73: error: Incompatible default for argument \"module_name\" (default has type \"None\", argument has type \"str\")  [assignment]\nsrc/om/session_manager.py:73: note: PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True\nsrc/om/session_manager.py:73: note: Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase\nsrc/om/session_manager.py:73: error: Missing type parameters for generic type \"Dict\"  [type-arg]\nsrc/om/session_manager.py:109: error: Function is missing a return type annotation  [no-untyped-def]\nsrc/om/session_manager.py:109: error: Incompatible default for argument \"module_name\" (default has type \"None\", argument has type \"str\")  [assignment]\nsrc/om/session_manager.py:109: note: PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True\nsrc/om/session_manager.py:109: note: Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase\nsrc/om/session_manager.py:129: error: Incompatible default for argument \"module_name\" (default has type \"None\", argument has type \"str\")  [assignment]\nsrc/om/session_manager.py:129: note: PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True\nsrc/om/session_manager.py:129: note: Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase\nsrc/om/session_manager.py:129: error: Missing type parameters for generic type \"Dict\"  [type-arg]\nsrc/om/session_manager.py:153: error: Function is missing a return type annotation  [no-untyped-def]\nsrc/om/session_manager.py:153: error: Incompatible default for argument \"module_name\" (default has type \"None\", argument has type \"str\")  [assignment]\nsrc/om/session_manager.py:153: note: PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True\nsrc/om/session_manager.py:153: note: Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase\nsrc/om/session_manager.py:183: error: Incompatible return value type (got \"list[dict[str, Any]]\", expected \"list[str]\")  [return-value]\nsrc/om/session_manager.py:185: error: Missing type parameters for generic type \"Dict\"  [type-arg]\nsrc/om/session_manager.py:203: error: Function is missing a return type annotation  [no-untyped-def]\nsrc/om/session_manager.py:203: note: Use \"-> None\" if function does not return a value\nsrc/om/schema_generation.py:30: error: Function is missing a return type annotation  [no-untyped-def]\nsrc/om/schema_generation.py:30: note: Use \"-> None\" if function does not return a value\nsrc/om/schema_generation.py:54: error: List item 0 has incompatible type \"None\"; expected \"str\"  [list-item]\nsrc/om/schema_generation.py:138: error: Missing type parameters for generic type \"tuple\"  [type-arg]\nsrc/om/schema_generation.py:162: error: Missing type parameters for generic type \"tuple\"  [type-arg]\nsrc/om/schema_generation.py:189: error: Missing type parameters for generic type \"tuple\"  [type-arg]\nsrc/om/schema_generation.py:217: error: Missing type parameters for generic type \"tuple\"  [type-arg]\nsrc/om/schema_generation.py:288: error: overloaded function has no attribute \"MISSING\"  [attr-defined]\nsrc/om/schema_generation.py:309: error: Function is missing a return type annotation  [no-untyped-def]\nsrc/om/schema_generation.py:309: note: Use \"-> None\" if function does not return a value\nsrc/om/schema_generation.py:310: error: Call to untyped function \"TypeAnalyzer\" in typed context  [no-untyped-call]\nsrc/om/schema_generation.py:313: error: Missing type parameters for generic type \"Dict\"  [type-arg]\nsrc/om/schema_generation.py:313: error: Incompatible default for argument \"module_globals\" (default has type \"None\", argument has type \"dict[Any, Any]\")  [assignment]\nsrc/om/schema_generation.py:313: note: PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True\nsrc/om/schema_generation.py:313: note: Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase\nsrc/om/schema_generation.py:338: error: Unsupported target for indexed assignment (\"Collection[str]\")  [index]\nsrc/om/schema_generation.py:345: error: \"Collection[str]\" has no attribute \"append\"  [attr-defined]\nsrc/om/schema_generation.py:392: error: Unsupported target for indexed assignment (\"Collection[str]\")  [index]\nsrc/om/schema_generation.py:394: error: Unsupported target for indexed assignment (\"Collection[str]\")  [index]\nsrc/om/schema_generation.py:483: error: Function is missing a return type annotation  [no-untyped-def]\nsrc/om/project_context.py:18: error: Missing type parameters for generic type \"Dict\"  [type-arg]\nsrc/om/project_context.py:19: error: Missing type parameters for generic type \"Dict\"  [type-arg]\nsrc/om/project_context.py:20: error: Missing type parameters for generic type \"Dict\"  [type-arg]\nsrc/om/project_context.py:30: error: Call to untyped function \"_ensure_memory_tables\" in typed context  [no-untyped-call]\nsrc/om/project_context.py:32: error: Function is missing a return type annotation  [no-untyped-def]\nsrc/om/project_context.py:32: note: Use \"-> None\" if function does not return a value\nsrc/om/project_context.py:40: error: Missing type parameters for generic type \"Dict\"  [type-arg]\nsrc/om/project_context.py:72: error: Missing type parameters for generic type \"Dict\"  [type-arg]\nsrc/om/project_context.py:97: error: Function is missing a return type annotation  [no-untyped-def]\nsrc/om/project_context.py:97: error: Missing type parameters for generic type \"Dict\"  [type-arg]\nsrc/om/project_context.py:123: error: Missing type parameters for generic type \"Dict\"  [type-arg]\nsrc/om/project_context.py:153: error: Function is missing a return type annotation  [no-untyped-def]\nsrc/om/project_context.py:153: error: Missing type parameters for generic type \"Dict\"  [type-arg]\nsrc/om/project_context.py:227: error: Incompatible return value type (got \"list[dict[str, Any]]\", expected \"list[str]\")  [return-value]\nsrc/om/project_context.py:229: error: Function is missing a return type annotation  [no-untyped-def]\nsrc/om/project_context.py:240: error: Missing type parameters for generic type \"Dict\"  [type-arg]\nsrc/om/project_context.py:266: error: Missing type parameters for generic type \"Dict\"  [type-arg]\nsrc/om/project_context.py:285: error: \"Sequence[str]\" has no attribute \"append\"  [attr-defined]\nsrc/om/project_context.py:304: error: Function is missing a return type annotation  [no-untyped-def]\nsrc/om/project_context.py:304: note: Use \"-> None\" if function does not return a value\nsrc/om/preferences.py:27: error: Call to untyped function \"_ensure_memory_tables\" in typed context  [no-untyped-call]\nsrc/om/preferences.py:29: error: Function is missing a return type annotation  [no-untyped-def]\nsrc/om/preferences.py:29: note: Use \"-> None\" if function does not return a value\nsrc/om/preferences.py:37: error: Function is missing a return type annotation  [no-untyped-def]\nsrc/om/preferences.py:37: error: Missing type parameters for generic type \"Dict\"  [type-arg]\nsrc/om/preferences.py:44: error: Function is missing a return type annotation  [no-untyped-def]\nsrc/om/preferences.py:44: error: Missing type parameters for generic type \"Dict\"  [type-arg]\nsrc/om/preferences.py:51: error: Function is missing a return type annotation  [no-untyped-def]\nsrc/om/preferences.py:51: error: Missing type parameters for generic type \"Dict\"  [type-arg]\nsrc/om/preferences.py:58: error: Function is missing a return type annotation  [no-untyped-def]\nsrc/om/preferences.py:58: error: Missing type parameters for generic type \"Dict\"  [type-arg]\nsrc/om/preferences.py:65: error: Incompatible default for argument \"context\" (default has type \"None\", argument has type \"str\")  [assignment]\nsrc/om/preferences.py:65: note: PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True\nsrc/om/preferences.py:65: note: Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase\nsrc/om/preferences.py:65: error: Missing type parameters for generic type \"Dict\"  [type-arg]\nsrc/om/preferences.py:83: error: Need type annotation for \"preferences\" (hint: \"preferences: dict[<type>, <type>] = ...\")  [var-annotated]\nsrc/om/preferences.py:102: error: Function is missing a return type annotation  [no-untyped-def]\nsrc/om/preferences.py:102: error: Missing type parameters for generic type \"Dict\"  [type-arg]\nsrc/om/preferences.py:113: error: Missing type parameters for generic type \"Dict\"  [type-arg]\nsrc/om/preferences.py:132: error: Unsupported target for indexed assignment (\"Collection[str]\")  [index]\nsrc/om/preferences.py:139: error: Value of type \"Collection[str]\" is not indexable  [index]\nsrc/om/preferences.py:147: error: Function is missing a return type annotation  [no-untyped-def]\nsrc/om/preferences.py:147: error: Missing type parameters for generic type \"Dict\"  [type-arg]\nsrc/om/preferences.py:162: error: Missing type parameters for generic type \"Dict\"  [type-arg]\nsrc/om/preferences.py:165: error: Returning Any from function declared to return \"dict[Any, Any]\"  [no-any-return]\nsrc/om/preferences.py:167: error: Missing type parameters for generic type \"Dict\"  [type-arg]\nsrc/om/preferences.py:170: error: Returning Any from function declared to return \"dict[Any, Any]\"  [no-any-return]\nsrc/om/preferences.py:172: error: Missing type parameters for generic type \"Dict\"  [type-arg]\nsrc/om/preferences.py:175: error: Returning Any from function declared to return \"dict[Any, Any]\"  [no-any-return]\nsrc/om/preferences.py:177: error: Function is missing a return type annotation  [no-untyped-def]\nsrc/om/preferences.py:198: error: Function is missing a return type annotation  [no-untyped-def]\nsrc/om/preferences.py:198: error: Incompatible default for argument \"key\" (default has type \"None\", argument has type \"str\")  [assignment]\nsrc/om/preferences.py:198: note: PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True\nsrc/om/preferences.py:198: note: Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase\nsrc/om/preferences.py:207: error: Missing type parameters for generic type \"Dict\"  [type-arg]\nsrc/om/preferences.py:234: error: Function is missing a return type annotation  [no-untyped-def]\nsrc/om/preferences.py:249: error: Function is missing a return type annotation  [no-untyped-def]\nsrc/om/preferences.py:249: note: Use \"-> None\" if function does not return a value\nsrc/om/module_isolation.py:41: error: Call to untyped function \"_ensure_memory_tables\" in typed context  [no-untyped-call]\nsrc/om/module_isolation.py:43: error: Function is missing a return type annotation  [no-untyped-def]\nsrc/om/module_isolation.py:43: note: Use \"-> None\" if function does not return a value\nsrc/om/module_isolation.py:81: error: Missing type parameters for generic type \"Dict\"  [type-arg]\nsrc/om/module_isolation.py:110: error: Missing type parameters for generic type \"Dict\"  [type-arg]\nsrc/om/module_isolation.py:147: error: Missing type parameters for generic type \"Dict\"  [type-arg]\nsrc/om/module_isolation.py:161: error: Function is missing a return type annotation  [no-untyped-def]\nsrc/om/module_isolation.py:166: error: Missing type parameters for generic type \"Dict\"  [type-arg]\nsrc/om/module_isolation.py:188: error: Function is missing a return type annotation  [no-untyped-def]\nsrc/om/module_isolation.py:260: error: Missing type parameters for generic type \"Dict\"  [type-arg]\nsrc/om/module_isolation.py:285: error: Missing type parameters for generic type \"Dict\"  [type-arg]\nsrc/om/module_isolation.py:299: error: Function is missing a return type annotation  [no-untyped-def]\nsrc/om/module_isolation.py:299: note: Use \"-> None\" if function does not return a value\nsrc/om/docless_architecture.py:29: error: Function is missing a return type annotation  [no-untyped-def]\nsrc/om/docless_architecture.py:29: note: Use \"-> None\" if function does not return a value\nsrc/om/docless_architecture.py:49: error: Argument 2 to \"_infer_parameter_purpose\" of \"CodeDocumentationExtractor\" has incompatible type \"expr | None\"; expected \"AST\"  [arg-type]\nsrc/om/docless_architecture.py:53: error: Argument 1 to \"_infer_return_purpose\" of \"CodeDocumentationExtractor\" has incompatible type \"expr | None\"; expected \"AST\"  [arg-type]\nsrc/om/analysis.py:13: error: Library stubs not installed for \"networkx\"  [import-untyped]\nsrc/om/analysis.py:13: note: Hint: \"python3 -m pip install types-networkx\"\nsrc/om/analysis.py:13: note: (or run \"mypy --install-types\" to install all missing stub packages)\nsrc/om/analysis.py:13: note: See https://mypy.readthedocs.io/en/stable/running_mypy.html#missing-imports\nsrc/om/analysis.py:55: error: Need type annotation for \"modules\" (hint: \"modules: dict[<type>, <type>] = ...\")  [var-annotated]\nsrc/om/analysis.py:57: error: Need type annotation for \"patterns\" (hint: \"patterns: dict[<type>, <type>] = ...\")  [var-annotated]\nsrc/om/analysis.py:59: error: Missing type parameters for generic type \"Dict\"  [type-arg]\nsrc/om/analysis.py:76: error: Missing type parameters for generic type \"Dict\"  [type-arg]\nsrc/om/analysis.py:88: error: Need type annotation for \"longest\"  [var-annotated]\nsrc/om/analysis.py:121: error: Missing type parameters for generic type \"Dict\"  [type-arg]\nsrc/om/analysis.py:146: error: Argument \"key\" to \"sort\" of \"list\" has incompatible type \"Callable[[dict[str, object]], object]\"; expected \"Callable[[dict[str, object]], SupportsDunderLT[Any] | SupportsDunderGT[Any]]\"  [arg-type]\nsrc/om/analysis.py:146: error: Incompatible return value type (got \"object\", expected \"SupportsDunderLT[Any] | SupportsDunderGT[Any]\")  [return-value]\nsrc/om/analysis.py:154: error: Unsupported operand types for > (\"int\" and \"object\")  [operator]\nsrc/om/analysis.py:160: error: Missing type parameters for generic type \"Dict\"  [type-arg]\nsrc/om/analysis.py:163: error: Need type annotation for \"gaps\"  [var-annotated]\nsrc/om/analysis.py:300: error: Missing type parameters for generic type \"Dict\"  [type-arg]\nsrc/om/analysis.py:345: error: Returning Any from function declared to return \"float\"  [no-any-return]\nsrc/om/tasks/analyzer.py:11: error: Function is missing a return type annotation  [no-untyped-def]\nsrc/om/tasks/analyzer.py:11: note: Use \"-> None\" if function does not return a value\nsrc/om/tasks/analyzer.py:106: error: Argument \"key\" to \"max\" has incompatible type overloaded function; expected \"Callable[[TaskType], SupportsDunderLT[Any] | SupportsDunderGT[Any]]\"  [arg-type]\nsrc/om/docs/code_analyzer.py:19: error: Incompatible types in assignment (expression has type \"None\", variable has type \"dict[str, str]\")  [assignment]\nsrc/om/docs/code_analyzer.py:21: error: Incompatible types in assignment (expression has type \"None\", variable has type \"list[str]\")  [assignment]\nsrc/om/docs/code_analyzer.py:22: error: Incompatible types in assignment (expression has type \"None\", variable has type \"list[str]\")  [assignment]\nsrc/om/docs/code_analyzer.py:24: error: Function is missing a return type annotation  [no-untyped-def]\nsrc/om/docs/code_analyzer.py:24: note: Use \"-> None\" if function does not return a value\nsrc/om/docs/code_analyzer.py:36: error: Function is missing a return type annotation  [no-untyped-def]\nsrc/om/docs/code_analyzer.py:36: note: Use \"-> None\" if function does not return a value\nsrc/om/docs/code_analyzer.py:78: error: Argument 1 to \"get_docstring\" has incompatible type \"AST\"; expected \"AsyncFunctionDef | FunctionDef | ClassDef | Module\"  [arg-type]\nsrc/om/docs/code_analyzer.py:153: error: Argument 1 to \"_get_function_signature\" of \"CodeAnalyzer\" has incompatible type \"AsyncFunctionDef\"; expected \"FunctionDef\"  [arg-type]\nsrc/om/docs/code_analyzer.py:156: error: Argument 1 to \"_extract_function_dependencies\" of \"CodeAnalyzer\" has incompatible type \"AsyncFunctionDef\"; expected \"FunctionDef\"  [arg-type]\nsrc/om/docs/code_analyzer.py:167: error: Argument 1 to \"_extract_annotations\" of \"CodeAnalyzer\" has incompatible type \"AsyncFunctionDef\"; expected \"FunctionDef\"  [arg-type]\nsrc/om/docs/code_analyzer.py:178: error: \"expr\" has no attribute \"id\"  [attr-defined]\nsrc/om/learning.py:28: error: Call to untyped function \"_ensure_memory_tables\" in typed context  [no-untyped-call]\nsrc/om/learning.py:30: error: Function is missing a return type annotation  [no-untyped-def]\nsrc/om/learning.py:30: note: Use \"-> None\" if function does not return a value\nsrc/om/learning.py:38: error: Function is missing a return type annotation  [no-untyped-def]\nsrc/om/learning.py:38: error: Incompatible default for argument \"module_context\" (default has type \"None\", argument has type \"str\")  [assignment]\nsrc/om/learning.py:38: note: PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True\nsrc/om/learning.py:38: note: Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase\nsrc/om/learning.py:55: error: Missing type parameters for generic type \"Dict\"  [type-arg]\nsrc/om/learning.py:69: error: Need type annotation for \"patterns\"  [var-annotated]\nsrc/om/learning.py:87: error: Unsupported target for indexed assignment (\"Collection[Any]\")  [index]\nsrc/om/learning.py:88: error: Value of type \"Collection[Any]\" is not indexable  [index]\nsrc/om/learning.py:90: error: \"Collection[Any]\" has no attribute \"append\"  [attr-defined]\nsrc/om/learning.py:93: error: \"Collection[Any]\" has no attribute \"append\"  [attr-defined]\nsrc/om/learning.py:97: error: Function is missing a return type annotation  [no-untyped-def]\nsrc/om/learning.py:97: error: Missing type parameters for generic type \"Dict\"  [type-arg]\nsrc/om/learning.py:102: error: Argument 1 to \"PreferenceManager\" has incompatible type \"Path\"; expected \"str\"  [arg-type]\nsrc/om/learning.py:104: error: Call to untyped function \"close\" in typed context  [no-untyped-call]\nsrc/om/learning.py:108: error: Incompatible default for argument \"task_type\" (default has type \"None\", argument has type \"str\")  [assignment]\nsrc/om/learning.py:108: note: PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True\nsrc/om/learning.py:108: note: Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase\nsrc/om/learning.py:158: error: Missing type parameters for generic type \"Dict\"  [type-arg]\nsrc/om/learning.py:192: error: Missing type parameters for generic type \"Dict\"  [type-arg]\nsrc/om/learning.py:221: error: Incompatible default for argument \"context\" (default has type \"None\", argument has type \"str\")  [assignment]\nsrc/om/learning.py:221: note: PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True\nsrc/om/learning.py:221: note: Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase\nsrc/om/learning.py:252: error: Incompatible return value type (got \"list[dict[str, Any]]\", expected \"list[str]\")  [return-value]\nsrc/om/learning.py:254: error: Missing type parameters for generic type \"Dict\"  [type-arg]\nsrc/om/learning.py:280: error: Function is missing a return type annotation  [no-untyped-def]\nsrc/om/learning.py:280: note: Use \"-> None\" if function does not return a value\nsrc/om/tasks/manager.py:20: error: Call to untyped function \"TaskAnalyzer\" in typed context  [no-untyped-call]\nsrc/om/tasks/manager.py:21: error: Call to untyped function \"_load_tasks\" in typed context  [no-untyped-call]\nsrc/om/tasks/manager.py:23: error: Function is missing a type annotation for one or more arguments  [no-untyped-def]\nsrc/om/tasks/manager.py:61: error: Call to untyped function \"_save_tasks\" in typed context  [no-untyped-call]\nsrc/om/tasks/manager.py:90: error: Call to untyped function \"_save_tasks\" in typed context  [no-untyped-call]\nsrc/om/tasks/manager.py:94: error: Function is missing a type annotation for one or more arguments  [no-untyped-def]\nsrc/om/tasks/manager.py:106: error: Call to untyped function \"_save_tasks\" in typed context  [no-untyped-call]\nsrc/om/tasks/manager.py:139: error: Call to untyped function \"_save_tasks\" in typed context  [no-untyped-call]\nsrc/om/tasks/manager.py:189: error: Need type annotation for \"status_counts\" (hint: \"status_counts: dict[<type>, <type>] = ...\")  [var-annotated]\nsrc/om/tasks/manager.py:190: error: Need type annotation for \"type_counts\" (hint: \"type_counts: dict[<type>, <type>] = ...\")  [var-annotated]\nsrc/om/tasks/manager.py:191: error: Need type annotation for \"priority_counts\" (hint: \"priority_counts: dict[<type>, <type>] = ...\")  [var-annotated]\nsrc/om/tasks/manager.py:224: error: Function is missing a return type annotation  [no-untyped-def]\nsrc/om/tasks/manager.py:246: error: Function is missing a return type annotation  [no-untyped-def]\nsrc/om/tasks/manager.py:246: note: Use \"-> None\" if function does not return a value\nsrc/om/tasks/manager.py:278: error: Function is missing a return type annotation  [no-untyped-def]\nsrc/om/tasks/manager.py:278: note: Use \"-> None\" if function does not return a value\nsrc/om/tasks/manager.py:325: error: Call to untyped function \"_save_tasks\" in typed context  [no-untyped-call]\nsrc/om/docs/sphinx_generator.py:40: error: Function is missing a return type annotation  [no-untyped-def]\nsrc/om/docs/sphinx_generator.py:75: error: Function is missing a return type annotation  [no-untyped-def]\nsrc/om/docs/sphinx_generator.py:112: error: Function is missing a return type annotation  [no-untyped-def]\nsrc/om/docs/sphinx_generator.py:148: error: Function is missing a return type annotation  [no-untyped-def]\nsrc/om/docs/sphinx_generator.py:169: error: Need type annotation for \"modules\" (hint: \"modules: dict[<type>, <type>] = ...\")  [var-annotated]\nsrc/om/scoped_cli.py:17: error: Function is missing a return type annotation  [no-untyped-def]\nsrc/om/scoped_cli.py:17: note: Use \"-> None\" if function does not return a value\nsrc/om/scoped_cli.py:65: error: Function is missing a return type annotation  [no-untyped-def]\nsrc/om/scoped_cli.py:76: error: Need type annotation for \"scope_groups\" (hint: \"scope_groups: dict[<type>, <type>] = ...\")  [var-annotated]\nsrc/om/scoped_cli.py:95: error: Call to untyped function \"ScopedCLI\" in typed context  [no-untyped-call]\nsrc/om/scoped_cli.py:98: error: Function is missing a type annotation  [no-untyped-def]\nsrc/om/scoped_cli.py:107: error: Function is missing a return type annotation  [no-untyped-def]\nsrc/om/scoped_cli.py:107: error: Missing type parameters for generic type \"tuple\"  [type-arg]\nsrc/om/scoped_cli.py:134: error: Function is missing a return type annotation  [no-untyped-def]\nsrc/om/scoped_cli.py:134: note: Use \"-> None\" if function does not return a value\nsrc/om/scoped_cli.py:143: error: Function is missing a type annotation  [no-untyped-def]\nsrc/om/scoped_cli.py:163: error: Function is missing a type annotation  [no-untyped-def]\nsrc/om/scoped_cli.py:181: error: Function is missing a return type annotation  [no-untyped-def]\nsrc/om/scoped_cli.py:181: note: Use \"-> None\" if function does not return a value\nsrc/om/scoped_cli.py:194: error: Function is missing a type annotation  [no-untyped-def]\nsrc/om/scoped_cli.py:201: error: Function is missing a return type annotation  [no-untyped-def]\nsrc/om/scoped_cli.py:201: note: Use \"-> None\" if function does not return a value\nsrc/om/scoped_cli.py:204: error: Call to untyped function \"_save_session\" in typed context  [no-untyped-call]\nsrc/om/scoped_cli.py:210: error: Function is missing a type annotation  [no-untyped-def]\nsrc/om/scoped_cli.py:222: error: Function is missing a return type annotation  [no-untyped-def]\nsrc/om/scoped_cli.py:222: note: Use \"-> None\" if function does not return a value\nsrc/om/scoped_cli.py:238: error: Function is missing a type annotation  [no-untyped-def]\nsrc/om/scoped_cli.py:244: error: Call to untyped function \"scope_option\" in typed context  [no-untyped-call]\nsrc/om/scoped_cli.py:249: error: Function is missing a return type annotation  [no-untyped-def]\nsrc/om/scoped_cli.py:251: error: Function is missing a type annotation  [no-untyped-def]\nsrc/om/scoped_cli.py:260: error: Function is missing a type annotation  [no-untyped-def]\nsrc/om/scoped_cli.py:262: error: Function is missing a type annotation  [no-untyped-def]\nsrc/om/scaffold_commands.py:15: error: Function is missing a type annotation  [no-untyped-def]\nsrc/om/scaffold_commands.py:54: error: Incompatible types in assignment (expression has type \"str\", variable has type \"SubsystemDefinition\")  [assignment]\nsrc/om/scaffold_commands.py:70: error: Function is missing a type annotation  [no-untyped-def]\nsrc/om/scaffold_commands.py:95: error: Function is missing a type annotation  [no-untyped-def]\nsrc/om/scaffold_commands.py:130: error: Function is missing a type annotation  [no-untyped-def]\nsrc/om/scaffold_commands.py:150: error: Function is missing a type annotation  [no-untyped-def]\nsrc/om/memory_integration.py:28: error: Missing type parameters for generic type \"Dict\"  [type-arg]\nsrc/om/memory_integration.py:52: error: Missing type parameters for generic type \"Dict\"  [type-arg]\nsrc/om/memory_integration.py:52: error: Incompatible default for argument \"module\" (default has type \"None\", argument has type \"str\")  [assignment]\nsrc/om/memory_integration.py:52: note: PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True\nsrc/om/memory_integration.py:52: note: Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase\nsrc/om/memory_integration.py:71: error: Missing type parameters for generic type \"Dict\"  [type-arg]\nsrc/om/memory_integration.py:71: error: Incompatible default for argument \"module\" (default has type \"None\", argument has type \"str\")  [assignment]\nsrc/om/memory_integration.py:71: note: PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True\nsrc/om/memory_integration.py:71: note: Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase\nsrc/om/memory_integration.py:93: error: Missing type parameters for generic type \"Dict\"  [type-arg]\nsrc/om/memory_integration.py:93: error: Incompatible default for argument \"module\" (default has type \"None\", argument has type \"str\")  [assignment]\nsrc/om/memory_integration.py:93: note: PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True\nsrc/om/memory_integration.py:93: note: Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase\nsrc/om/memory_integration.py:136: error: Function is missing a return type annotation  [no-untyped-def]\nsrc/om/memory_integration.py:136: error: Missing type parameters for generic type \"Dict\"  [type-arg]\nsrc/om/memory_integration.py:136: error: Incompatible default for argument \"module\" (default has type \"None\", argument has type \"str\")  [assignment]\nsrc/om/memory_integration.py:136: note: PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True\nsrc/om/memory_integration.py:136: note: Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase\nsrc/om/memory_integration.py:151: error: Incompatible default for argument \"module\" (default has type \"None\", argument has type \"str\")  [assignment]\nsrc/om/memory_integration.py:151: note: PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True\nsrc/om/memory_integration.py:151: note: Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase\nsrc/om/memory_integration.py:175: error: Missing type parameters for generic type \"Dict\"  [type-arg]\nsrc/om/memory_integration.py:175: error: Incompatible default for argument \"module\" (default has type \"None\", argument has type \"str\")  [assignment]\nsrc/om/memory_integration.py:175: note: PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True\nsrc/om/memory_integration.py:175: note: Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase\nsrc/om/memory_integration.py:191: error: Missing type parameters for generic type \"Dict\"  [type-arg]\nsrc/om/memory_integration.py:195: error: Missing type parameters for generic type \"Dict\"  [type-arg]\nsrc/om/memory_integration.py:195: error: Incompatible default for argument \"context\" (default has type \"None\", argument has type \"dict[Any, Any]\")  [assignment]\nsrc/om/memory_integration.py:195: note: PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True\nsrc/om/memory_integration.py:195: note: Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase\nsrc/om/memory_integration.py:230: error: Missing type parameters for generic type \"Dict\"  [type-arg]\nsrc/om/memory_integration.py:244: error: Incompatible types in assignment (expression has type \"Any | int\", target has type \"dict[Any, Any]\")  [assignment]\nsrc/om/memory_integration.py:249: error: Incompatible types in assignment (expression has type \"Any | int\", target has type \"dict[Any, Any]\")  [assignment]\nsrc/om/memory_integration.py:251: error: Incompatible types in assignment (expression has type \"int\", target has type \"dict[Any, Any]\")  [assignment]\nsrc/om/memory_integration.py:252: error: Incompatible types in assignment (expression has type \"int\", target has type \"dict[Any, Any]\")  [assignment]\nsrc/om/memory_integration.py:256: error: Function is missing a return type annotation  [no-untyped-def]\nsrc/om/memory_integration.py:258: error: Name \"timedelta\" is not defined  [name-defined]\nsrc/om/memory_integration.py:272: error: Function is missing a return type annotation  [no-untyped-def]\nsrc/om/memory_integration.py:272: note: Use \"-> None\" if function does not return a value\nsrc/om/memory_integration.py:274: error: Call to untyped function \"close\" in typed context  [no-untyped-call]\nsrc/om/memory_integration.py:275: error: Call to untyped function \"close\" in typed context  [no-untyped-call]\nsrc/om/memory_integration.py:276: error: Call to untyped function \"close\" in typed context  [no-untyped-call]\nsrc/om/memory_integration.py:277: error: Call to untyped function \"close\" in typed context  [no-untyped-call]\nsrc/om/memory_integration.py:278: error: Call to untyped function \"close\" in typed context  [no-untyped-call]\nsrc/om/cli_reference.py:16: error: Function is missing a return type annotation  [no-untyped-def]\nsrc/om/cli_reference.py:16: note: Use \"-> None\" if function does not return a value\nsrc/om/cli_reference.py:42: error: Unsupported target for indexed assignment (\"list[str] | list[dict[str, Any]] | str | Any | list[Any] | None\")  [index]\nsrc/om/cli_reference.py:42: error: No overload variant of \"__setitem__\" of \"list\" matches argument types \"str\", \"dict[str, Any]\"  [call-overload]\nsrc/om/cli_reference.py:42: note: Possible overload variants:\nsrc/om/cli_reference.py:42: note:     def __setitem__(self, SupportsIndex, str, /) -> None\nsrc/om/cli_reference.py:42: note:     def __setitem__(self, slice[Any, Any, Any], Iterable[str], /) -> None\nsrc/om/cli_reference.py:42: note:     def __setitem__(self, SupportsIndex, dict[str, Any], /) -> None\nsrc/om/cli_reference.py:42: note:     def __setitem__(self, slice[Any, Any, Any], Iterable[dict[str, Any]], /) -> None\nsrc/om/cli_reference.py:42: note:     def __setitem__(self, SupportsIndex, Any, /) -> None\nsrc/om/cli_reference.py:42: note:     def __setitem__(self, slice[Any, Any, Any], Iterable[Any], /) -> None\nsrc/om/cli_reference.py:92: error: \"Argument\" has no attribute \"help\"  [attr-defined]\nsrc/om/cli_reference.py:113: error: Incompatible types in assignment (expression has type \"Sequence[Any]\", target has type \"str\")  [assignment]\nsrc/om/cli_reference.py:114: error: Incompatible types in assignment (expression has type \"bool\", target has type \"str\")  [assignment]\nsrc/om/cli_reference.py:116: error: Incompatible types in assignment (expression has type \"float | None\", target has type \"str\")  [assignment]\nsrc/om/cli_reference.py:117: error: Incompatible types in assignment (expression has type \"float | None\", target has type \"str\")  [assignment]\nsrc/om/cli_reference.py:119: error: Incompatible types in assignment (expression has type \"float | None\", target has type \"str\")  [assignment]\nsrc/om/cli_reference.py:120: error: Incompatible types in assignment (expression has type \"float | None\", target has type \"str\")  [assignment]\nsrc/om/cli_reference.py:122: error: Incompatible types in assignment (expression has type \"bool\", target has type \"str\")  [assignment]\nsrc/om/cli_reference.py:123: error: Incompatible types in assignment (expression has type \"bool\", target has type \"str\")  [assignment]\nsrc/om/cli_reference.py:124: error: Incompatible types in assignment (expression has type \"bool\", target has type \"str\")  [assignment]\nsrc/om/cli_reference.py:125: error: Incompatible types in assignment (expression has type \"bool\", target has type \"str\")  [assignment]\nsrc/om/cli_reference.py:126: error: Incompatible types in assignment (expression has type \"bool\", target has type \"str\")  [assignment]\nsrc/om/cli_reference.py:316: error: Need type annotation for \"completion_data\"  [var-annotated]\nsrc/om/cli_reference.py:322: error: Function is missing a return type annotation  [no-untyped-def]\nsrc/om/docs/documentation_builder.py:19: error: Call to untyped function \"CodeAnalyzer\" in typed context  [no-untyped-call]\nsrc/om/docs/documentation_builder.py:23: error: Incompatible default for argument \"file_patterns\" (default has type \"None\", argument has type \"list[str]\")  [assignment]\nsrc/om/docs/documentation_builder.py:23: note: PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True\nsrc/om/docs/documentation_builder.py:23: note: Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase\nsrc/om/docs/documentation_builder.py:41: error: Function is missing a return type annotation  [no-untyped-def]\nsrc/om/docs/documentation_builder.py:68: error: Function \"builtins.any\" is not valid as a type  [valid-type]\nsrc/om/docs/documentation_builder.py:68: note: Perhaps you meant \"typing.Any\" instead of \"any\"?\nsrc/om/docs/documentation_builder.py:87: error: Incompatible types in assignment (expression has type \"float | int\", target has type \"int\")  [assignment]\nsrc/om/docs/documentation_builder.py:126: error: Incompatible default for argument \"output_dir\" (default has type \"None\", argument has type \"Path\")  [assignment]\nsrc/om/docs/documentation_builder.py:126: note: PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True\nsrc/om/docs/documentation_builder.py:126: note: Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase\nsrc/om/docs/documentation_builder.py:126: error: Function \"builtins.any\" is not valid as a type  [valid-type]\nsrc/om/docs/documentation_builder.py:126: note: Perhaps you meant \"typing.Any\" instead of \"any\"?\nsrc/om/cli/workspace.py:9: error: Function is missing a return type annotation  [no-untyped-def]\nsrc/om/cli/workspace.py:9: note: Use \"-> None\" if function does not return a value\nsrc/om/cli/workspace.py:15: error: Function is missing a return type annotation  [no-untyped-def]\nsrc/om/cli/workspace.py:15: note: Use \"-> None\" if function does not return a value\nsrc/om/cli/workspace.py:36: error: Function is missing a return type annotation  [no-untyped-def]\nsrc/om/cli/workspace.py:36: note: Use \"-> None\" if function does not return a value\nsrc/om/cli/scaffold.py:7: error: Function is missing a return type annotation  [no-untyped-def]\nsrc/om/cli/scaffold.py:7: note: Use \"-> None\" if function does not return a value\nsrc/om/cli/scaffold.py:15: error: Function is missing a return type annotation  [no-untyped-def]\nsrc/om/cli/scaffold.py:15: note: Use \"-> None\" if function does not return a value\nsrc/om/schema_commands.py:12: error: Function is missing a return type annotation  [no-untyped-def]\nsrc/om/schema_commands.py:12: note: Use \"-> None\" if function does not return a value\nsrc/om/schema_commands.py:24: error: Function is missing a type annotation  [no-untyped-def]\nsrc/om/schema_commands.py:26: error: Call to untyped function \"SchemaGenerator\" in typed context  [no-untyped-call]\nsrc/om/schema_commands.py:76: error: Function is missing a type annotation  [no-untyped-def]\nsrc/om/schema_commands.py:82: error: Call to untyped function \"SchemaGenerator\" in typed context  [no-untyped-call]\nsrc/om/schema_commands.py:86: error: Need type annotation for \"python_files\" (hint: \"python_files: list[<type>] = ...\")  [var-annotated]\nsrc/om/schema_commands.py:130: error: Function is missing a type annotation  [no-untyped-def]\nsrc/om/schema_commands.py:166: error: Function is missing a type annotation  [no-untyped-def]\nsrc/om/schema_commands.py:186: error: Call to untyped function \"SchemaGenerator\" in typed context  [no-untyped-call]\nsrc/om/schema_commands.py:205: error: Function is missing a type annotation  [no-untyped-def]\nsrc/om/schema_commands.py:225: error: Call to untyped function \"SchemaGenerator\" in typed context  [no-untyped-call]\nsrc/om/schema_commands.py:239: error: Function is missing a type annotation  [no-untyped-def]\nsrc/om/coverage_commands.py:12: error: Function is missing a return type annotation  [no-untyped-def]\nsrc/om/coverage_commands.py:12: note: Use \"-> None\" if function does not return a value\nsrc/om/coverage_commands.py:26: error: Function is missing a type annotation  [no-untyped-def]\nsrc/om/coverage_commands.py:28: error: Call to untyped function \"CoverageAnalyzer\" in typed context  [no-untyped-call]\nsrc/om/coverage_commands.py:72: error: Function is missing a type annotation  [no-untyped-def]\nsrc/om/coverage_commands.py:88: error: Call to untyped function \"CoverageAnalyzer\" in typed context  [no-untyped-call]\nsrc/om/coverage_commands.py:117: error: Function is missing a type annotation  [no-untyped-def]\nsrc/om/coverage_commands.py:119: error: Call to untyped function \"CoverageAnalyzer\" in typed context  [no-untyped-call]\nsrc/om/coverage_commands.py:161: error: Function is missing a type annotation  [no-untyped-def]\nsrc/om/coverage_commands.py:163: error: Call to untyped function \"CoverageAnalyzer\" in typed context  [no-untyped-call]\nsrc/om/coverage_commands.py:170: error: Invalid index type \"str\" for \"str\"; expected type \"SupportsIndex | slice[Any, Any, Any]\"  [index]\nsrc/om/coverage_commands.py:184: error: Invalid index type \"str\" for \"str\"; expected type \"SupportsIndex | slice[Any, Any, Any]\"  [index]\nsrc/om/coverage_commands.py:185: error: Invalid index type \"str\" for \"str\"; expected type \"SupportsIndex | slice[Any, Any, Any]\"  [index]\nsrc/om/coverage_commands.py:186: error: Invalid index type \"str\" for \"str\"; expected type \"SupportsIndex | slice[Any, Any, Any]\"  [index]\nsrc/om/coverage_commands.py:213: error: Function is missing a type annotation  [no-untyped-def]\nsrc/om/coverage_commands.py:249: error: Function is missing a type annotation  [no-untyped-def]\nsrc/om/workflow_automation.py:48: error: Missing type parameters for generic type \"Dict\"  [type-arg]\nsrc/om/workflow_automation.py:51: error: Call to untyped function \"_register_builtin_workflows\" in typed context  [no-untyped-call]\nsrc/om/workflow_automation.py:53: error: Function is missing a return type annotation  [no-untyped-def]\nsrc/om/workflow_automation.py:53: note: Use \"-> None\" if function does not return a value\nsrc/om/workflow_automation.py:182: error: Incompatible default for argument \"variables\" (default has type \"None\", argument has type \"dict[str, Any]\")  [assignment]\nsrc/om/workflow_automation.py:182: note: PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True\nsrc/om/workflow_automation.py:182: note: Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase\nsrc/om/workflow_automation.py:228: error: Call to untyped function \"_save_tasks\" in typed context  [no-untyped-call]\nsrc/om/workflow_automation.py:351: error: Item \"None\" of \"Task | None\" has no attribute \"status\"  [union-attr]\nsrc/om/workflow_automation.py:367: error: Unsupported operand types for + (\"object\" and \"int\")  [operator]\nsrc/om/workflow_automation.py:369: error: Unsupported operand types for + (\"object\" and \"int\")  [operator]\nsrc/om/workflow_automation.py:370: error: \"object\" has no attribute \"append\"  [attr-defined]\nsrc/om/workflow_automation.py:372: error: Unsupported operand types for + (\"object\" and \"int\")  [operator]\nsrc/om/workflow_automation.py:373: error: \"object\" has no attribute \"append\"  [attr-defined]\nsrc/om/workflow_automation.py:385: error: Need type annotation for \"status\"  [var-annotated]\nsrc/om/workflow_automation.py:408: error: Item \"float\" of \"list[Any] | float | str\" has no attribute \"append\"  [union-attr]\nsrc/om/workflow_automation.py:408: error: Item \"str\" of \"list[Any] | float | str\" has no attribute \"append\"  [union-attr]\nsrc/om/workflow_automation.py:412: error: Item \"float\" of \"list[Any] | float | str\" has no attribute \"append\"  [union-attr]\nsrc/om/workflow_automation.py:412: error: Item \"str\" of \"list[Any] | float | str\" has no attribute \"append\"  [union-attr]\nsrc/om/workflow_automation.py:414: error: Item \"float\" of \"list[Any] | float | str\" has no attribute \"append\"  [union-attr]\nsrc/om/workflow_automation.py:414: error: Item \"str\" of \"list[Any] | float | str\" has no attribute \"append\"  [union-attr]\nsrc/om/workflow_automation.py:469: error: Incompatible default for argument \"target_files\" (default has type \"None\", argument has type \"list[str]\")  [assignment]\nsrc/om/workflow_automation.py:469: note: PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True\nsrc/om/workflow_automation.py:469: note: Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase\nsrc/om/task_commands.py:13: error: Function is missing a return type annotation  [no-untyped-def]\nsrc/om/task_commands.py:13: note: Use \"-> None\" if function does not return a value\nsrc/om/task_commands.py:27: error: Function is missing a type annotation  [no-untyped-def]\nsrc/om/task_commands.py:65: error: Function is missing a type annotation  [no-untyped-def]\nsrc/om/task_commands.py:84: error: Function is missing a type annotation  [no-untyped-def]\nsrc/om/task_commands.py:107: error: Function is missing a type annotation  [no-untyped-def]\nsrc/om/task_commands.py:116: error: Unexpected keyword argument \"assigned_to\" for \"list_tasks\" of \"TaskManager\"  [call-arg]\nsrc/om/task_commands.py:319: error: Missing type parameters for generic type \"dict\"  [type-arg]\nsrc/om/tasks/manager.py:146: note: \"list_tasks\" of \"TaskManager\" defined here\nsrc/om/task_commands.py:158: error: Function is missing a type annotation  [no-untyped-def]\nsrc/om/task_commands.py:171: error: \"TaskManager\" has no attribute \"get_task_tree\"; maybe \"get_task\"?  [attr-defined]\nsrc/om/task_commands.py:213: error: Function is missing a return type annotation  [no-untyped-def]\nsrc/om/task_commands.py:213: note: Use \"-> None\" if function does not return a value\nsrc/om/task_commands.py:216: error: \"TaskManager\" has no attribute \"get_dashboard_data\"  [attr-defined]\nsrc/om/task_commands.py:251: error: Function is missing a type annotation  [no-untyped-def]\nsrc/om/task_commands.py:266: error: Incompatible types in assignment (expression has type \"TaskPriority\", target has type \"TaskStatus\")  [assignment]\nsrc/om/task_commands.py:272: error: Incompatible types in assignment (expression has type \"datetime\", target has type \"TaskStatus\")  [assignment]\nsrc/om/task_commands.py:279: error: Incompatible types in assignment (expression has type \"list[str]\", target has type \"TaskStatus\")  [assignment]\nsrc/om/task_commands.py:283: error: Incompatible types in assignment (expression has type \"list[str]\", target has type \"TaskStatus\")  [assignment]\nsrc/om/task_commands.py:334: error: Function is missing a type annotation  [no-untyped-def]\nsrc/om/docs_commands.py:16: error: Function is missing a return type annotation  [no-untyped-def]\nsrc/om/docs_commands.py:16: note: Use \"-> None\" if function does not return a value\nsrc/om/docs_commands.py:29: error: Function is missing a type annotation  [no-untyped-def]\nsrc/om/docs_commands.py:45: error: Value of type \"bool\" is not indexable  [index]\nsrc/om/docs_commands.py:52: error: Value of type \"bool\" is not indexable  [index]\nsrc/om/docs_commands.py:55: error: Value of type \"bool\" is not indexable  [index]\nsrc/om/docs_commands.py:61: error: \"DocumentationBuilder\" has no attribute \"build_html\"  [attr-defined]\nsrc/om/docs_commands.py:73: error: Function is missing a type annotation  [no-untyped-def]\nsrc/om/docs_commands.py:75: error: Call to untyped function \"CodeAnalyzer\" in typed context  [no-untyped-call]\nsrc/om/docs_commands.py:117: error: Need type annotation for \"by_type\" (hint: \"by_type: dict[<type>, <type>] = ...\")  [var-annotated]\nsrc/om/docs_commands.py:144: error: Function is missing a type annotation  [no-untyped-def]\nsrc/om/docs_commands.py:186: error: Function is missing a type annotation  [no-untyped-def]\nsrc/om/docs_commands.py:223: error: Function is missing a type annotation  [no-untyped-def]\nsrc/om/docs_commands.py:265: error: Function is missing a type annotation  [no-untyped-def]\nsrc/om/docs_commands.py:270: error: Call to untyped function \"register_coverage_commands\" in typed context  [no-untyped-call]\nsrc/om/docs_commands.py:277: error: Call to untyped function \"register_schema_commands\" in typed context  [no-untyped-call]\nsrc/om/enhanced_parser.py:7: error: Function is missing a return type annotation  [no-untyped-def]\nsrc/om/enhanced_parser.py:28: error: Call to untyped function \"integrate_sphinx_parser\" in typed context  [no-untyped-call]\nsrc/om/enhanced_parser.py:52: error: Call to untyped function \"integrate_sphinx_parser\" in typed context  [no-untyped-call]\nsrc/om/cli/utils.py:8: error: Function is missing a return type annotation  [no-untyped-def]\nsrc/om/cli/utils.py:21: error: Function is missing a return type annotation  [no-untyped-def]\nsrc/om/cli/utils.py:34: error: Function is missing a return type annotation  [no-untyped-def]\nsrc/om/cli/session.py:8: error: Function is missing a return type annotation  [no-untyped-def]\nsrc/om/cli/session.py:8: note: Use \"-> None\" if function does not return a value\nsrc/om/cli/session.py:16: error: Function is missing a type annotation  [no-untyped-def]\nsrc/om/cli/session.py:18: error: Call to untyped function \"_check_memory\" in typed context  [no-untyped-call]\nsrc/om/cli/session.py:26: error: \"SessionManager\" has no attribute \"save_session\"  [attr-defined]\nsrc/om/cli/session.py:27: error: Call to untyped function \"close\" in typed context  [no-untyped-call]\nsrc/om/cli/session.py:40: error: Function is missing a type annotation  [no-untyped-def]\nsrc/om/cli/session.py:42: error: Call to untyped function \"_check_memory\" in typed context  [no-untyped-call]\nsrc/om/cli/session.py:50: error: \"SessionManager\" has no attribute \"restore_session\"; maybe \"restore_session_context\"?  [attr-defined]\nsrc/om/cli/session.py:51: error: Call to untyped function \"close\" in typed context  [no-untyped-call]\nsrc/om/cli/session.py:62: error: Function is missing a return type annotation  [no-untyped-def]\nsrc/om/cli/session.py:62: note: Use \"-> None\" if function does not return a value\nsrc/om/cli/session.py:64: error: Call to untyped function \"_check_memory\" in typed context  [no-untyped-call]\nsrc/om/cli/session.py:72: error: \"SessionManager\" has no attribute \"list_sessions\"; maybe \"list_active_sessions\"?  [attr-defined]\nsrc/om/cli/session.py:73: error: Call to untyped function \"close\" in typed context  [no-untyped-call]\nsrc/om/cli/preferences.py:8: error: Function is missing a return type annotation  [no-untyped-def]\nsrc/om/cli/preferences.py:8: note: Use \"-> None\" if function does not return a value\nsrc/om/cli/preferences.py:18: error: Function is missing a type annotation  [no-untyped-def]\nsrc/om/cli/preferences.py:20: error: Call to untyped function \"_check_memory\" in typed context  [no-untyped-call]\nsrc/om/cli/preferences.py:29: error: Call to untyped function \"close\" in typed context  [no-untyped-call]\nsrc/om/cli/preferences.py:39: error: Function is missing a type annotation  [no-untyped-def]\nsrc/om/cli/preferences.py:41: error: Call to untyped function \"_check_memory\" in typed context  [no-untyped-call]\nsrc/om/cli/preferences.py:50: error: \"PreferenceManager\" has no attribute \"get_category_preferences\"; maybe \"get_user_preferences\"?  [attr-defined]\nsrc/om/cli/preferences.py:53: error: \"PreferenceManager\" has no attribute \"get_all_preferences\"; maybe \"get_preference\", \"get_user_preferences\", or \"set_preference\"?  [attr-defined]\nsrc/om/cli/preferences.py:56: error: Call to untyped function \"close\" in typed context  [no-untyped-call]\nsrc/om/cli/preferences.py:74: error: Function is missing a type annotation  [no-untyped-def]\nsrc/om/cli/preferences.py:76: error: Call to untyped function \"_check_memory\" in typed context  [no-untyped-call]\nsrc/om/cli/preferences.py:84: error: \"PreferenceManager\" has no attribute \"record_feedback\"  [attr-defined]\nsrc/om/cli/preferences.py:85: error: Call to untyped function \"close\" in typed context  [no-untyped-call]\nsrc/om/cli/preferences.py:94: error: Function is missing a return type annotation  [no-untyped-def]\nsrc/om/cli/preferences.py:94: note: Use \"-> None\" if function does not return a value\nsrc/om/cli/preferences.py:96: error: Call to untyped function \"_check_memory\" in typed context  [no-untyped-call]\nsrc/om/cli/preferences.py:105: error: Call to untyped function \"close\" in typed context  [no-untyped-call]\nsrc/om/cli/memory.py:8: error: Function is missing a return type annotation  [no-untyped-def]\nsrc/om/cli/memory.py:8: note: Use \"-> None\" if function does not return a value\nsrc/om/cli/memory.py:14: error: Function is missing a return type annotation  [no-untyped-def]\nsrc/om/cli/memory.py:14: note: Use \"-> None\" if function does not return a value\nsrc/om/cli/memory.py:16: error: Call to untyped function \"_check_memory\" in typed context  [no-untyped-call]\nsrc/om/cli/memory.py:23: error: \"MemoryIntegration\" has no attribute \"get_current_context\"  [attr-defined]\nsrc/om/cli/memory.py:24: error: Call to untyped function \"close\" in typed context  [no-untyped-call]\nsrc/om/cli/memory.py:40: error: Function is missing a type annotation  [no-untyped-def]\nsrc/om/cli/memory.py:42: error: Call to untyped function \"_check_memory\" in typed context  [no-untyped-call]\nsrc/om/cli/memory.py:50: error: \"MemoryIntegration\" has no attribute \"inject_context\"  [attr-defined]\nsrc/om/cli/memory.py:58: error: Call to untyped function \"close\" in typed context  [no-untyped-call]\nsrc/om/cli/memory.py:78: error: Function is missing a type annotation  [no-untyped-def]\nsrc/om/cli/memory.py:80: error: Call to untyped function \"_check_memory\" in typed context  [no-untyped-call]\nsrc/om/cli/memory.py:90: error: \"MemoryIntegration\" has no attribute \"inject_context\"  [attr-defined]\nsrc/om/cli/memory.py:109: error: Call to untyped function \"close\" in typed context  [no-untyped-call]\nsrc/om/cli/memory.py:125: error: Function is missing a type annotation  [no-untyped-def]\nsrc/om/cli/memory.py:127: error: Call to untyped function \"_check_memory\" in typed context  [no-untyped-call]\nsrc/om/cli/memory.py:135: error: \"MemoryIntegration\" has no attribute \"populate_patterns\"  [attr-defined]\nsrc/om/cli/memory.py:136: error: Call to untyped function \"close\" in typed context  [no-untyped-call]\nsrc/om/cli/isolate.py:8: error: Function is missing a return type annotation  [no-untyped-def]\nsrc/om/cli/isolate.py:8: note: Use \"-> None\" if function does not return a value\nsrc/om/cli/isolate.py:16: error: Function is missing a type annotation  [no-untyped-def]\nsrc/om/cli/isolate.py:18: error: Call to untyped function \"_check_memory\" in typed context  [no-untyped-call]\nsrc/om/cli/isolate.py:26: error: \"ModuleIsolation\" has no attribute \"create_isolated_environment\"  [attr-defined]\nsrc/om/cli/isolate.py:27: error: Call to untyped function \"close\" in typed context  [no-untyped-call]\nsrc/om/cli/isolate.py:37: error: Function is missing a type annotation  [no-untyped-def]\nsrc/om/cli/isolate.py:39: error: Call to untyped function \"_check_memory\" in typed context  [no-untyped-call]\nsrc/om/cli/isolate.py:47: error: \"ModuleIsolation\" has no attribute \"focus_module\"  [attr-defined]\nsrc/om/cli/isolate.py:48: error: Call to untyped function \"close\" in typed context  [no-untyped-call]\nsrc/om/cli/isolate.py:61: error: Function is missing a type annotation  [no-untyped-def]\nsrc/om/cli/isolate.py:63: error: Call to untyped function \"_check_memory\" in typed context  [no-untyped-call]\nsrc/om/cli/isolate.py:71: error: \"ModuleIsolation\" has no attribute \"set_module_boundaries\"; maybe \"_get_module_boundaries\", \"define_module_boundaries\", or \"enforce_module_boundaries\"?  [attr-defined]\nsrc/om/cli/isolate.py:76: error: Call to untyped function \"close\" in typed context  [no-untyped-call]\nsrc/om/cli/isolate.py:87: error: Function is missing a type annotation  [no-untyped-def]\nsrc/om/cli/isolate.py:89: error: Call to untyped function \"_check_memory\" in typed context  [no-untyped-call]\nsrc/om/cli/isolate.py:97: error: \"ModuleIsolation\" has no attribute \"inject_task\"  [attr-defined]\nsrc/om/cli/isolate.py:98: error: Call to untyped function \"close\" in typed context  [no-untyped-call]\nsrc/om/cli/isolate.py:110: error: Function is missing a type annotation  [no-untyped-def]\nsrc/om/cli/isolate.py:112: error: Call to untyped function \"_check_memory\" in typed context  [no-untyped-call]\nsrc/om/cli/isolate.py:121: error: Call to untyped function \"close\" in typed context  [no-untyped-call]\nsrc/om/cli/find.py:8: error: Function is missing a return type annotation  [no-untyped-def]\nsrc/om/cli/find.py:8: note: Use \"-> None\" if function does not return a value\nsrc/om/cli/find.py:14: error: Function is missing a return type annotation  [no-untyped-def]\nsrc/om/cli/find.py:14: note: Use \"-> None\" if function does not return a value\nsrc/om/cli/find.py:16: error: Call to untyped function \"_check_code_parser\" in typed context  [no-untyped-call]\nsrc/om/cli/find.py:23: error: \"ContextDB\" has no attribute \"analyze_codebase\"  [attr-defined]\nsrc/om/cli/find.py:35: error: Function is missing a return type annotation  [no-untyped-def]\nsrc/om/cli/find.py:35: note: Use \"-> None\" if function does not return a value\nsrc/om/cli/find.py:37: error: Call to untyped function \"_check_code_parser\" in typed context  [no-untyped-call]\nsrc/om/cli/find.py:44: error: \"ContextDB\" has no attribute \"get_architecture_overview\"  [attr-defined]\nsrc/om/cli/find.py:58: error: Function is missing a return type annotation  [no-untyped-def]\nsrc/om/cli/find.py:58: note: Use \"-> None\" if function does not return a value\nsrc/om/cli/find.py:60: error: Call to untyped function \"_check_code_parser\" in typed context  [no-untyped-call]\nsrc/om/cli/find.py:67: error: \"ContextDB\" has no attribute \"get_dependency_graph\"  [attr-defined]\nsrc/om/cli/find.py:80: error: Function is missing a return type annotation  [no-untyped-def]\nsrc/om/cli/find.py:80: note: Use \"-> None\" if function does not return a value\nsrc/om/cli/find.py:82: error: Call to untyped function \"_check_code_parser\" in typed context  [no-untyped-call]\nsrc/om/cli/find.py:87: error: Module \"knowledge.enhanced_patterns\" has no attribute \"EnhancedPatternDetector\"  [attr-defined]\nsrc/om/cli/find.py:91: error: Need type annotation for \"pattern_counts\" (hint: \"pattern_counts: dict[<type>, <type>] = ...\")  [var-annotated]\nsrc/om/cli/find.py:107: error: Function is missing a return type annotation  [no-untyped-def]\nsrc/om/cli/find.py:107: note: Use \"-> None\" if function does not return a value\nsrc/om/cli/find.py:109: error: Call to untyped function \"_check_code_parser\" in typed context  [no-untyped-call]\nsrc/om/cli/find.py:116: error: \"ContextDB\" has no attribute \"find_architectural_gaps\"  [attr-defined]\nsrc/om/cli/find.py:119: error: Need type annotation for \"gap_types\" (hint: \"gap_types: dict[<type>, <type>] = ...\")  [var-annotated]\nsrc/om/cli/find.py:136: error: Function is missing a type annotation  [no-untyped-def]\nsrc/om/cli/find.py:138: error: Call to untyped function \"_check_code_parser\" in typed context  [no-untyped-call]\nsrc/om/cli/find.py:164: error: Function is missing a type annotation  [no-untyped-def]\nsrc/om/cli/find.py:166: error: Call to untyped function \"_check_code_parser\" in typed context  [no-untyped-call]\nsrc/om/cli/docs.py:10: error: Function is missing a return type annotation  [no-untyped-def]\nsrc/om/cli/docs.py:10: note: Use \"-> None\" if function does not return a value\nsrc/om/cli/docs.py:16: error: Function is missing a return type annotation  [no-untyped-def]\nsrc/om/cli/docs.py:16: note: Use \"-> None\" if function does not return a value\nsrc/om/cli/docs.py:23: error: Function is missing a type annotation  [no-untyped-def]\nsrc/om/cli/docs.py:41: error: Function is missing a type annotation  [no-untyped-def]\nsrc/om/cli/docs.py:56: error: Function is missing a return type annotation  [no-untyped-def]\nsrc/om/cli/docs.py:61: error: Call to untyped function \"_check_docs_parser\" in typed context  [no-untyped-call]\nsrc/om/cli/docs.py:82: error: Function is missing a return type annotation  [no-untyped-def]\nsrc/om/cli/docs.py:82: note: Use \"-> None\" if function does not return a value\nsrc/om/cli/docs.py:84: error: Call to untyped function \"_check_docs_parser\" in typed context  [no-untyped-call]\nsrc/om/cli/docs.py:106: error: Function is missing a return type annotation  [no-untyped-def]\nsrc/om/cli/docs.py:106: error: Incompatible default for argument \"function\" (default has type \"None\", argument has type \"str\")  [assignment]\nsrc/om/cli/docs.py:106: note: PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True\nsrc/om/cli/docs.py:106: note: Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase\nsrc/om/cli/docs.py:108: error: Call to untyped function \"_check_docs_parser\" in typed context  [no-untyped-call]\nsrc/om/cli/docs.py:114: error: Call to untyped function \"UniversalParser\" in typed context  [no-untyped-call]\nsrc/om/cli/docs.py:130: error: Function is missing a type annotation  [no-untyped-def]\nsrc/om/cli/docs.py:132: error: Call to untyped function \"_check_docs_parser\" in typed context  [no-untyped-call]\nsrc/om/cli/docs.py:147: error: Call to untyped function \"UniversalParser\" in typed context  [no-untyped-call]\nsrc/om/cli/code.py:11: error: Function is missing a return type annotation  [no-untyped-def]\nsrc/om/cli/code.py:11: note: Use \"-> None\" if function does not return a value\nsrc/om/cli/code.py:19: error: Function is missing a type annotation  [no-untyped-def]\nsrc/om/cli/code.py:21: error: Call to untyped function \"_check_code_parser\" in typed context  [no-untyped-call]\nsrc/om/cli/code.py:26: error: Module \"code_parser.python_parser\" has no attribute \"PythonParser\"; maybe \"PythonCodeParser\"?  [attr-defined]\nsrc/om/cli/code.py:27: error: Module \"knowledge.db_manager\" has no attribute \"DatabaseManager\"  [attr-defined]\nsrc/om/cli/code.py:33: error: Module \"knowledge.enhanced_patterns\" has no attribute \"EnhancedPatternDetector\"  [attr-defined]\nsrc/om/cli/code.py:59: error: Function is missing a return type annotation  [no-untyped-def]\nsrc/om/cli/code.py:59: note: Use \"-> None\" if function does not return a value\nsrc/om/cli/code.py:61: error: Call to untyped function \"_check_code_parser\" in typed context  [no-untyped-call]\nsrc/om/cli/code.py:66: error: Module \"knowledge.db_manager\" has no attribute \"DatabaseManager\"  [attr-defined]\nsrc/om/cli/code.py:83: error: Function is missing a type annotation  [no-untyped-def]\nsrc/om/cli/code.py:85: error: Call to untyped function \"_check_code_parser\" in typed context  [no-untyped-call]\nsrc/om/cli/code.py:90: error: Module \"code_parser.interpreter\" has no attribute \"SafeInterpreter\"; maybe \"CodeInterpreter\"?  [attr-defined]\nsrc/om/cli/code.py:108: error: Function is missing a type annotation  [no-untyped-def]\nsrc/om/cli/code.py:110: error: Call to untyped function \"_check_code_parser\" in typed context  [no-untyped-call]\nsrc/om/cli/code.py:115: error: Module \"knowledge.db_manager\" has no attribute \"DatabaseManager\"  [attr-defined]\nsrc/om/cli/code.py:125: error: Module \"code_parser.interpreter\" has no attribute \"SafeInterpreter\"; maybe \"CodeInterpreter\"?  [attr-defined]\nsrc/om/cli/code.py:152: error: Function is missing a type annotation  [no-untyped-def]\nsrc/om/cli/main.py:22: error: Function is missing a type annotation  [no-untyped-def]\nFound 496 errors in 39 files (checked 46 source files)\n"
    },
    {
      "check": "File Size Critical",
      "error": "Files exceed 500-line absolute max: om/integration_examples.py: 602 lines, om/workflow_automation.py: 506 lines, om/schema_generation.py: 534 lines, om/coverage_enforcement.py: 596 lines"
    },
    {
      "check": "Project Count Violation",
      "error": "Found 0 projects, expected 5"
    }
  ]
}